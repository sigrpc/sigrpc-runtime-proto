// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace x64 {

inline constexpr X64XMMReg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : element_{},
        _element_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR X64XMMReg::X64XMMReg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct X64XMMRegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR X64XMMRegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~X64XMMRegDefaultTypeInternal() {}
  union {
    X64XMMReg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 X64XMMRegDefaultTypeInternal _X64XMMReg_default_instance_;

inline constexpr X64FPXReg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : significand_{},
        _significand_cached_byte_size_{0},
        reserved_{},
        _reserved_cached_byte_size_{0},
        exponent_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR X64FPXReg::X64FPXReg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct X64FPXRegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR X64FPXRegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~X64FPXRegDefaultTypeInternal() {}
  union {
    X64FPXReg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 X64FPXRegDefaultTypeInternal _X64FPXReg_default_instance_;

inline constexpr RPCHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_type_{0u},
        status_{0u},
        payload_size_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RPCHeader::RPCHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RPCHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RPCHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RPCHeaderDefaultTypeInternal() {}
  union {
    RPCHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RPCHeaderDefaultTypeInternal _RPCHeader_default_instance_;

inline constexpr Page::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_{::uint64_t{0u}},
        runtime_revision_{::uint64_t{0u}},
        client_revision_{::uint64_t{0u}},
        content_size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Page::Page(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageDefaultTypeInternal() {}
  union {
    Page _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageDefaultTypeInternal _Page_default_instance_;

inline constexpr Addr2Sym::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Addr2Sym::Addr2Sym(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Addr2SymDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Addr2SymDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Addr2SymDefaultTypeInternal() {}
  union {
    Addr2Sym _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Addr2SymDefaultTypeInternal _Addr2Sym_default_instance_;

inline constexpr X64FPRegs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : st_{},
        xmm_{},
        reserved_{},
        _reserved_cached_byte_size_{0},
        cwd_{0u},
        swd_{0u},
        ftw_{0u},
        fop_{0u},
        rip_{::uint64_t{0u}},
        rdp_{::uint64_t{0u}},
        mxcsr_{0u},
        mxcr_mask_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR X64FPRegs::X64FPRegs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct X64FPRegsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR X64FPRegsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~X64FPRegsDefaultTypeInternal() {}
  union {
    X64FPRegs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 X64FPRegsDefaultTypeInternal _X64FPRegs_default_instance_;

inline constexpr PullPageMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_{},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PullPageMsg::PullPageMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PullPageMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PullPageMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PullPageMsgDefaultTypeInternal() {}
  union {
    PullPageMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PullPageMsgDefaultTypeInternal _PullPageMsg_default_instance_;

inline constexpr LoadLibMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        addr2sym_{},
        library_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LoadLibMsg::LoadLibMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadLibMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadLibMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadLibMsgDefaultTypeInternal() {}
  union {
    LoadLibMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadLibMsgDefaultTypeInternal _LoadLibMsg_default_instance_;

inline constexpr CPUState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gregs_{},
        _gregs_cached_byte_size_{0},
        fpregs_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CPUState::CPUState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CPUStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPUStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPUStateDefaultTypeInternal() {}
  union {
    CPUState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPUStateDefaultTypeInternal _CPUState_default_instance_;

inline constexpr UserContext::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cpu_{nullptr},
        stack_bottom_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR UserContext::UserContext(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserContextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserContextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserContextDefaultTypeInternal() {}
  union {
    UserContext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserContextDefaultTypeInternal _UserContext_default_instance_;

inline constexpr InvokeFuncMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_{},
        header_{nullptr},
        ctx_{nullptr},
        invokefunc_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR InvokeFuncMsg::InvokeFuncMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InvokeFuncMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeFuncMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeFuncMsgDefaultTypeInternal() {}
  union {
    InvokeFuncMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeFuncMsgDefaultTypeInternal _InvokeFuncMsg_default_instance_;
}  // namespace x64
static ::_pb::Metadata file_level_metadata_message_2eproto[11];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::X64FPXReg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::X64FPXReg, _impl_.significand_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPXReg, _impl_.exponent_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPXReg, _impl_.reserved_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::X64XMMReg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::X64XMMReg, _impl_.element_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.cwd_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.swd_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.ftw_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.fop_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.rip_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.rdp_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.mxcsr_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.mxcr_mask_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.st_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.xmm_),
    PROTOBUF_FIELD_OFFSET(::x64::X64FPRegs, _impl_.reserved_),
    PROTOBUF_FIELD_OFFSET(::x64::CPUState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::x64::CPUState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::CPUState, _impl_.gregs_),
    PROTOBUF_FIELD_OFFSET(::x64::CPUState, _impl_.fpregs_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::RPCHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::RPCHeader, _impl_.msg_type_),
    PROTOBUF_FIELD_OFFSET(::x64::RPCHeader, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::x64::RPCHeader, _impl_.client_id_),
    PROTOBUF_FIELD_OFFSET(::x64::RPCHeader, _impl_.payload_size_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::Addr2Sym, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::Addr2Sym, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::x64::Addr2Sym, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::x64::Page, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::Page, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::x64::Page, _impl_.runtime_revision_),
    PROTOBUF_FIELD_OFFSET(::x64::Page, _impl_.client_revision_),
    PROTOBUF_FIELD_OFFSET(::x64::Page, _impl_.content_size_),
    PROTOBUF_FIELD_OFFSET(::x64::Page, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::x64::LoadLibMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::x64::LoadLibMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::LoadLibMsg, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::x64::LoadLibMsg, _impl_.library_name_),
    PROTOBUF_FIELD_OFFSET(::x64::LoadLibMsg, _impl_.addr2sym_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::x64::UserContext, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::x64::UserContext, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::UserContext, _impl_.cpu_),
    PROTOBUF_FIELD_OFFSET(::x64::UserContext, _impl_.stack_bottom_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _impl_.invokefunc_id_),
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _impl_.ctx_),
    PROTOBUF_FIELD_OFFSET(::x64::InvokeFuncMsg, _impl_.page_),
    0,
    ~0u,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::x64::PullPageMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::x64::PullPageMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::x64::PullPageMsg, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::x64::PullPageMsg, _impl_.page_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::x64::X64FPXReg)},
        {11, -1, -1, sizeof(::x64::X64XMMReg)},
        {20, -1, -1, sizeof(::x64::X64FPRegs)},
        {39, 49, -1, sizeof(::x64::CPUState)},
        {51, -1, -1, sizeof(::x64::RPCHeader)},
        {63, -1, -1, sizeof(::x64::Addr2Sym)},
        {73, -1, -1, sizeof(::x64::Page)},
        {86, 97, -1, sizeof(::x64::LoadLibMsg)},
        {100, 110, -1, sizeof(::x64::UserContext)},
        {112, 124, -1, sizeof(::x64::InvokeFuncMsg)},
        {128, 138, -1, sizeof(::x64::PullPageMsg)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::x64::_X64FPXReg_default_instance_._instance,
    &::x64::_X64XMMReg_default_instance_._instance,
    &::x64::_X64FPRegs_default_instance_._instance,
    &::x64::_CPUState_default_instance_._instance,
    &::x64::_RPCHeader_default_instance_._instance,
    &::x64::_Addr2Sym_default_instance_._instance,
    &::x64::_Page_default_instance_._instance,
    &::x64::_LoadLibMsg_default_instance_._instance,
    &::x64::_UserContext_default_instance_._instance,
    &::x64::_InvokeFuncMsg_default_instance_._instance,
    &::x64::_PullPageMsg_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rmessage.proto\022\003x64\"D\n\tX64FPXReg\022\023\n\013sig"
    "nificand\030\001 \003(\r\022\020\n\010exponent\030\002 \001(\r\022\020\n\010rese"
    "rved\030\003 \003(\r\"\034\n\tX64XMMReg\022\017\n\007element\030\001 \003(\r"
    "\"\306\001\n\tX64FPRegs\022\013\n\003cwd\030\001 \001(\r\022\013\n\003swd\030\002 \001(\r"
    "\022\013\n\003ftw\030\003 \001(\r\022\013\n\003fop\030\004 \001(\r\022\013\n\003rip\030\005 \001(\004\022"
    "\013\n\003rdp\030\006 \001(\004\022\r\n\005mxcsr\030\007 \001(\r\022\021\n\tmxcr_mask"
    "\030\010 \001(\r\022\032\n\002st\030\t \003(\0132\016.x64.X64FPXReg\022\033\n\003xm"
    "m\030\n \003(\0132\016.x64.X64XMMReg\022\020\n\010reserved\030\013 \003("
    "\r\"9\n\010CPUState\022\r\n\005gregs\030\001 \003(\004\022\036\n\006fpregs\030\002"
    " \001(\0132\016.x64.X64FPRegs\"V\n\tRPCHeader\022\020\n\010msg"
    "_type\030\001 \001(\r\022\016\n\006status\030\002 \001(\r\022\021\n\tclient_id"
    "\030\003 \001(\t\022\024\n\014payload_size\030\004 \001(\004\")\n\010Addr2Sym"
    "\022\017\n\007address\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\"q\n\004Page\022"
    "\017\n\007address\030\001 \001(\004\022\030\n\020runtime_revision\030\002 \001"
    "(\004\022\027\n\017client_revision\030\003 \001(\004\022\024\n\014content_s"
    "ize\030\004 \001(\r\022\017\n\007content\030\005 \001(\014\"c\n\nLoadLibMsg"
    "\022\036\n\006header\030\001 \001(\0132\016.x64.RPCHeader\022\024\n\014libr"
    "ary_name\030\002 \001(\t\022\037\n\010addr2sym\030\003 \003(\0132\r.x64.A"
    "ddr2Sym\"\?\n\013UserContext\022\032\n\003cpu\030\001 \001(\0132\r.x6"
    "4.CPUState\022\024\n\014stack_bottom\030\002 \001(\004\"~\n\rInvo"
    "keFuncMsg\022\036\n\006header\030\001 \001(\0132\016.x64.RPCHeade"
    "r\022\025\n\rinvokefunc_id\030\002 \001(\004\022\035\n\003ctx\030\003 \001(\0132\020."
    "x64.UserContext\022\027\n\004page\030\004 \003(\0132\t.x64.Page"
    "\"F\n\013PullPageMsg\022\036\n\006header\030\001 \001(\0132\016.x64.RP"
    "CHeader\022\027\n\004page\030\002 \003(\0132\t.x64.Page2\245\001\n\006Sig"
    "RPC\022-\n\007LoadLib\022\017.x64.LoadLibMsg\032\017.x64.Lo"
    "adLibMsg\"\000\022:\n\nInvokeFunc\022\022.x64.InvokeFun"
    "cMsg\032\022.x64.InvokeFuncMsg\"\000(\0010\001\0220\n\010PullPa"
    "ge\022\020.x64.PullPageMsg\032\020.x64.PullPageMsg\"\000"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    1168,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    nullptr,
    0,
    11,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);
namespace x64 {
// ===================================================================

class X64FPXReg::_Internal {
 public:
};

X64FPXReg::X64FPXReg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.X64FPXReg)
}
inline PROTOBUF_NDEBUG_INLINE X64FPXReg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : significand_{visibility, arena, from.significand_},
        _significand_cached_byte_size_{0},
        reserved_{visibility, arena, from.reserved_},
        _reserved_cached_byte_size_{0},
        _cached_size_{0} {}

X64FPXReg::X64FPXReg(
    ::google::protobuf::Arena* arena,
    const X64FPXReg& from)
    : ::google::protobuf::Message(arena) {
  X64FPXReg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.exponent_ = from._impl_.exponent_;

  // @@protoc_insertion_point(copy_constructor:x64.X64FPXReg)
}
inline PROTOBUF_NDEBUG_INLINE X64FPXReg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : significand_{visibility, arena},
        _significand_cached_byte_size_{0},
        reserved_{visibility, arena},
        _reserved_cached_byte_size_{0},
        _cached_size_{0} {}

inline void X64FPXReg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.exponent_ = {};
}
X64FPXReg::~X64FPXReg() {
  // @@protoc_insertion_point(destructor:x64.X64FPXReg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void X64FPXReg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void X64FPXReg::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.X64FPXReg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.significand_.Clear();
  _impl_.reserved_.Clear();
  _impl_.exponent_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* X64FPXReg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> X64FPXReg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_X64FPXReg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 significand = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.significand_)}},
    // uint32 exponent = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPXReg, _impl_.exponent_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.exponent_)}},
    // repeated uint32 reserved = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.reserved_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 significand = 1;
    {PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.significand_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 exponent = 2;
    {PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.exponent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 reserved = 3;
    {PROTOBUF_FIELD_OFFSET(X64FPXReg, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* X64FPXReg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.X64FPXReg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 significand = 1;
  {
    int byte_size = _impl_._significand_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_significand(), byte_size, target);
    }
  }

  // uint32 exponent = 2;
  if (this->_internal_exponent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_exponent(), target);
  }

  // repeated uint32 reserved = 3;
  {
    int byte_size = _impl_._reserved_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_reserved(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.X64FPXReg)
  return target;
}

::size_t X64FPXReg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.X64FPXReg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 significand = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_significand())
    ;
    _impl_._significand_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 reserved = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_reserved())
    ;
    _impl_._reserved_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // uint32 exponent = 2;
  if (this->_internal_exponent() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_exponent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData X64FPXReg::_class_data_ = {
    X64FPXReg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* X64FPXReg::GetClassData() const {
  return &_class_data_;
}

void X64FPXReg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<X64FPXReg*>(&to_msg);
  auto& from = static_cast<const X64FPXReg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.X64FPXReg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_significand()->MergeFrom(from._internal_significand());
  _this->_internal_mutable_reserved()->MergeFrom(from._internal_reserved());
  if (from._internal_exponent() != 0) {
    _this->_internal_set_exponent(from._internal_exponent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void X64FPXReg::CopyFrom(const X64FPXReg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.X64FPXReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool X64FPXReg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* X64FPXReg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void X64FPXReg::InternalSwap(X64FPXReg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.significand_.InternalSwap(&other->_impl_.significand_);
  _impl_.reserved_.InternalSwap(&other->_impl_.reserved_);
        swap(_impl_.exponent_, other->_impl_.exponent_);
}

::google::protobuf::Metadata X64FPXReg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}
// ===================================================================

class X64XMMReg::_Internal {
 public:
};

X64XMMReg::X64XMMReg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.X64XMMReg)
}
inline PROTOBUF_NDEBUG_INLINE X64XMMReg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : element_{visibility, arena, from.element_},
        _element_cached_byte_size_{0},
        _cached_size_{0} {}

X64XMMReg::X64XMMReg(
    ::google::protobuf::Arena* arena,
    const X64XMMReg& from)
    : ::google::protobuf::Message(arena) {
  X64XMMReg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:x64.X64XMMReg)
}
inline PROTOBUF_NDEBUG_INLINE X64XMMReg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : element_{visibility, arena},
        _element_cached_byte_size_{0},
        _cached_size_{0} {}

inline void X64XMMReg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
X64XMMReg::~X64XMMReg() {
  // @@protoc_insertion_point(destructor:x64.X64XMMReg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void X64XMMReg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void X64XMMReg::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.X64XMMReg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* X64XMMReg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> X64XMMReg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_X64XMMReg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated uint32 element = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(X64XMMReg, _impl_.element_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 element = 1;
    {PROTOBUF_FIELD_OFFSET(X64XMMReg, _impl_.element_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* X64XMMReg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.X64XMMReg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 element = 1;
  {
    int byte_size = _impl_._element_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_element(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.X64XMMReg)
  return target;
}

::size_t X64XMMReg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.X64XMMReg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 element = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_element())
    ;
    _impl_._element_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData X64XMMReg::_class_data_ = {
    X64XMMReg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* X64XMMReg::GetClassData() const {
  return &_class_data_;
}

void X64XMMReg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<X64XMMReg*>(&to_msg);
  auto& from = static_cast<const X64XMMReg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.X64XMMReg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_element()->MergeFrom(from._internal_element());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void X64XMMReg::CopyFrom(const X64XMMReg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.X64XMMReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool X64XMMReg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* X64XMMReg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void X64XMMReg::InternalSwap(X64XMMReg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
}

::google::protobuf::Metadata X64XMMReg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}
// ===================================================================

class X64FPRegs::_Internal {
 public:
};

X64FPRegs::X64FPRegs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.X64FPRegs)
}
inline PROTOBUF_NDEBUG_INLINE X64FPRegs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : st_{visibility, arena, from.st_},
        xmm_{visibility, arena, from.xmm_},
        reserved_{visibility, arena, from.reserved_},
        _reserved_cached_byte_size_{0},
        _cached_size_{0} {}

X64FPRegs::X64FPRegs(
    ::google::protobuf::Arena* arena,
    const X64FPRegs& from)
    : ::google::protobuf::Message(arena) {
  X64FPRegs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cwd_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cwd_),
           offsetof(Impl_, mxcr_mask_) -
               offsetof(Impl_, cwd_) +
               sizeof(Impl_::mxcr_mask_));

  // @@protoc_insertion_point(copy_constructor:x64.X64FPRegs)
}
inline PROTOBUF_NDEBUG_INLINE X64FPRegs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : st_{visibility, arena},
        xmm_{visibility, arena},
        reserved_{visibility, arena},
        _reserved_cached_byte_size_{0},
        _cached_size_{0} {}

inline void X64FPRegs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cwd_),
           0,
           offsetof(Impl_, mxcr_mask_) -
               offsetof(Impl_, cwd_) +
               sizeof(Impl_::mxcr_mask_));
}
X64FPRegs::~X64FPRegs() {
  // @@protoc_insertion_point(destructor:x64.X64FPRegs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void X64FPRegs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void X64FPRegs::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.X64FPRegs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.st_.Clear();
  _impl_.xmm_.Clear();
  _impl_.reserved_.Clear();
  ::memset(&_impl_.cwd_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mxcr_mask_) -
      reinterpret_cast<char*>(&_impl_.cwd_)) + sizeof(_impl_.mxcr_mask_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* X64FPRegs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 0, 2> X64FPRegs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_X64FPRegs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 cwd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.cwd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.cwd_)}},
    // uint32 swd = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.swd_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.swd_)}},
    // uint32 ftw = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.ftw_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.ftw_)}},
    // uint32 fop = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.fop_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.fop_)}},
    // uint64 rip = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(X64FPRegs, _impl_.rip_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.rip_)}},
    // uint64 rdp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(X64FPRegs, _impl_.rdp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.rdp_)}},
    // uint32 mxcsr = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.mxcsr_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.mxcsr_)}},
    // uint32 mxcr_mask = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(X64FPRegs, _impl_.mxcr_mask_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.mxcr_mask_)}},
    // repeated .x64.X64FPXReg st = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.st_)}},
    // repeated .x64.X64XMMReg xmm = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.xmm_)}},
    // repeated uint32 reserved = 11;
    {::_pbi::TcParser::FastV32P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.reserved_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 cwd = 1;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.cwd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 swd = 2;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.swd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 ftw = 3;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.ftw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 fop = 4;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.fop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 rip = 5;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.rip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 rdp = 6;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.rdp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 mxcsr = 7;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.mxcsr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mxcr_mask = 8;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.mxcr_mask_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .x64.X64FPXReg st = 9;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.st_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .x64.X64XMMReg xmm = 10;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.xmm_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 reserved = 11;
    {PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::X64FPXReg>()},
    {::_pbi::TcParser::GetTable<::x64::X64XMMReg>()},
  }}, {{
  }},
};

::uint8_t* X64FPRegs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.X64FPRegs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 cwd = 1;
  if (this->_internal_cwd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_cwd(), target);
  }

  // uint32 swd = 2;
  if (this->_internal_swd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_swd(), target);
  }

  // uint32 ftw = 3;
  if (this->_internal_ftw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_ftw(), target);
  }

  // uint32 fop = 4;
  if (this->_internal_fop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_fop(), target);
  }

  // uint64 rip = 5;
  if (this->_internal_rip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_rip(), target);
  }

  // uint64 rdp = 6;
  if (this->_internal_rdp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_rdp(), target);
  }

  // uint32 mxcsr = 7;
  if (this->_internal_mxcsr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_mxcsr(), target);
  }

  // uint32 mxcr_mask = 8;
  if (this->_internal_mxcr_mask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_mxcr_mask(), target);
  }

  // repeated .x64.X64FPXReg st = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_st_size()); i < n; i++) {
    const auto& repfield = this->_internal_st().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .x64.X64XMMReg xmm = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_xmm_size()); i < n; i++) {
    const auto& repfield = this->_internal_xmm().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint32 reserved = 11;
  {
    int byte_size = _impl_._reserved_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          11, _internal_reserved(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.X64FPRegs)
  return target;
}

::size_t X64FPRegs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.X64FPRegs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .x64.X64FPXReg st = 9;
  total_size += 1UL * this->_internal_st_size();
  for (const auto& msg : this->_internal_st()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .x64.X64XMMReg xmm = 10;
  total_size += 1UL * this->_internal_xmm_size();
  for (const auto& msg : this->_internal_xmm()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 reserved = 11;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_reserved())
    ;
    _impl_._reserved_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // uint32 cwd = 1;
  if (this->_internal_cwd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cwd());
  }

  // uint32 swd = 2;
  if (this->_internal_swd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_swd());
  }

  // uint32 ftw = 3;
  if (this->_internal_ftw() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ftw());
  }

  // uint32 fop = 4;
  if (this->_internal_fop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fop());
  }

  // uint64 rip = 5;
  if (this->_internal_rip() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_rip());
  }

  // uint64 rdp = 6;
  if (this->_internal_rdp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_rdp());
  }

  // uint32 mxcsr = 7;
  if (this->_internal_mxcsr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mxcsr());
  }

  // uint32 mxcr_mask = 8;
  if (this->_internal_mxcr_mask() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mxcr_mask());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData X64FPRegs::_class_data_ = {
    X64FPRegs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* X64FPRegs::GetClassData() const {
  return &_class_data_;
}

void X64FPRegs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<X64FPRegs*>(&to_msg);
  auto& from = static_cast<const X64FPRegs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.X64FPRegs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_st()->MergeFrom(
      from._internal_st());
  _this->_internal_mutable_xmm()->MergeFrom(
      from._internal_xmm());
  _this->_internal_mutable_reserved()->MergeFrom(from._internal_reserved());
  if (from._internal_cwd() != 0) {
    _this->_internal_set_cwd(from._internal_cwd());
  }
  if (from._internal_swd() != 0) {
    _this->_internal_set_swd(from._internal_swd());
  }
  if (from._internal_ftw() != 0) {
    _this->_internal_set_ftw(from._internal_ftw());
  }
  if (from._internal_fop() != 0) {
    _this->_internal_set_fop(from._internal_fop());
  }
  if (from._internal_rip() != 0) {
    _this->_internal_set_rip(from._internal_rip());
  }
  if (from._internal_rdp() != 0) {
    _this->_internal_set_rdp(from._internal_rdp());
  }
  if (from._internal_mxcsr() != 0) {
    _this->_internal_set_mxcsr(from._internal_mxcsr());
  }
  if (from._internal_mxcr_mask() != 0) {
    _this->_internal_set_mxcr_mask(from._internal_mxcr_mask());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void X64FPRegs::CopyFrom(const X64FPRegs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.X64FPRegs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool X64FPRegs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* X64FPRegs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void X64FPRegs::InternalSwap(X64FPRegs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.st_.InternalSwap(&other->_impl_.st_);
  _impl_.xmm_.InternalSwap(&other->_impl_.xmm_);
  _impl_.reserved_.InternalSwap(&other->_impl_.reserved_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.mxcr_mask_)
      + sizeof(X64FPRegs::_impl_.mxcr_mask_)
      - PROTOBUF_FIELD_OFFSET(X64FPRegs, _impl_.cwd_)>(
          reinterpret_cast<char*>(&_impl_.cwd_),
          reinterpret_cast<char*>(&other->_impl_.cwd_));
}

::google::protobuf::Metadata X64FPRegs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}
// ===================================================================

class CPUState::_Internal {
 public:
  using HasBits = decltype(std::declval<CPUState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CPUState, _impl_._has_bits_);
  static const ::x64::X64FPRegs& fpregs(const CPUState* msg);
  static void set_has_fpregs(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::x64::X64FPRegs& CPUState::_Internal::fpregs(const CPUState* msg) {
  return *msg->_impl_.fpregs_;
}
CPUState::CPUState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.CPUState)
}
inline PROTOBUF_NDEBUG_INLINE CPUState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gregs_{visibility, arena, from.gregs_},
        _gregs_cached_byte_size_{0} {}

CPUState::CPUState(
    ::google::protobuf::Arena* arena,
    const CPUState& from)
    : ::google::protobuf::Message(arena) {
  CPUState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fpregs_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::x64::X64FPRegs>(arena, *from._impl_.fpregs_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:x64.CPUState)
}
inline PROTOBUF_NDEBUG_INLINE CPUState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        gregs_{visibility, arena},
        _gregs_cached_byte_size_{0} {}

inline void CPUState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fpregs_ = {};
}
CPUState::~CPUState() {
  // @@protoc_insertion_point(destructor:x64.CPUState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CPUState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.fpregs_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CPUState::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.CPUState)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gregs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fpregs_ != nullptr);
    _impl_.fpregs_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CPUState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CPUState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CPUState, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CPUState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .x64.X64FPRegs fpregs = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CPUState, _impl_.fpregs_)}},
    // repeated uint64 gregs = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CPUState, _impl_.gregs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint64 gregs = 1;
    {PROTOBUF_FIELD_OFFSET(CPUState, _impl_.gregs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // .x64.X64FPRegs fpregs = 2;
    {PROTOBUF_FIELD_OFFSET(CPUState, _impl_.fpregs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::X64FPRegs>()},
  }}, {{
  }},
};

::uint8_t* CPUState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.CPUState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint64 gregs = 1;
  {
    int byte_size = _impl_._gregs_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_gregs(), byte_size, target);
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .x64.X64FPRegs fpregs = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::fpregs(this),
        _Internal::fpregs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.CPUState)
  return target;
}

::size_t CPUState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.CPUState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 gregs = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_gregs())
    ;
    _impl_._gregs_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // .x64.X64FPRegs fpregs = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fpregs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CPUState::_class_data_ = {
    CPUState::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CPUState::GetClassData() const {
  return &_class_data_;
}

void CPUState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CPUState*>(&to_msg);
  auto& from = static_cast<const CPUState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.CPUState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gregs()->MergeFrom(from._internal_gregs());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_fpregs()->::x64::X64FPRegs::MergeFrom(
        from._internal_fpregs());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CPUState::CopyFrom(const CPUState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.CPUState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CPUState::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CPUState::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CPUState::InternalSwap(CPUState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.gregs_.InternalSwap(&other->_impl_.gregs_);
  swap(_impl_.fpregs_, other->_impl_.fpregs_);
}

::google::protobuf::Metadata CPUState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[3]);
}
// ===================================================================

class RPCHeader::_Internal {
 public:
};

RPCHeader::RPCHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.RPCHeader)
}
inline PROTOBUF_NDEBUG_INLINE RPCHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : client_id_(arena, from.client_id_),
        _cached_size_{0} {}

RPCHeader::RPCHeader(
    ::google::protobuf::Arena* arena,
    const RPCHeader& from)
    : ::google::protobuf::Message(arena) {
  RPCHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msg_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, msg_type_),
           offsetof(Impl_, payload_size_) -
               offsetof(Impl_, msg_type_) +
               sizeof(Impl_::payload_size_));

  // @@protoc_insertion_point(copy_constructor:x64.RPCHeader)
}
inline PROTOBUF_NDEBUG_INLINE RPCHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        _cached_size_{0} {}

inline void RPCHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msg_type_),
           0,
           offsetof(Impl_, payload_size_) -
               offsetof(Impl_, msg_type_) +
               sizeof(Impl_::payload_size_));
}
RPCHeader::~RPCHeader() {
  // @@protoc_insertion_point(destructor:x64.RPCHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RPCHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RPCHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.RPCHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.msg_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.payload_size_) -
      reinterpret_cast<char*>(&_impl_.msg_type_)) + sizeof(_impl_.payload_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RPCHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 31, 2> RPCHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RPCHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 payload_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RPCHeader, _impl_.payload_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.payload_size_)}},
    // uint32 msg_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RPCHeader, _impl_.msg_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.msg_type_)}},
    // uint32 status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RPCHeader, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.status_)}},
    // string client_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 msg_type = 1;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.msg_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 status = 2;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string client_id = 3;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 payload_size = 4;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.payload_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\15\0\0\11\0\0\0\0"
    "x64.RPCHeader"
    "client_id"
  }},
};

::uint8_t* RPCHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.RPCHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 msg_type = 1;
  if (this->_internal_msg_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_msg_type(), target);
  }

  // uint32 status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_status(), target);
  }

  // string client_id = 3;
  if (!this->_internal_client_id().empty()) {
    const std::string& _s = this->_internal_client_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "x64.RPCHeader.client_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 payload_size = 4;
  if (this->_internal_payload_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_payload_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.RPCHeader)
  return target;
}

::size_t RPCHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.RPCHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 3;
  if (!this->_internal_client_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_client_id());
  }

  // uint32 msg_type = 1;
  if (this->_internal_msg_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_msg_type());
  }

  // uint32 status = 2;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_status());
  }

  // uint64 payload_size = 4;
  if (this->_internal_payload_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_payload_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RPCHeader::_class_data_ = {
    RPCHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RPCHeader::GetClassData() const {
  return &_class_data_;
}

void RPCHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RPCHeader*>(&to_msg);
  auto& from = static_cast<const RPCHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.RPCHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_msg_type() != 0) {
    _this->_internal_set_msg_type(from._internal_msg_type());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_payload_size() != 0) {
    _this->_internal_set_payload_size(from._internal_payload_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RPCHeader::CopyFrom(const RPCHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.RPCHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RPCHeader::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RPCHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RPCHeader::InternalSwap(RPCHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.payload_size_)
      + sizeof(RPCHeader::_impl_.payload_size_)
      - PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.msg_type_)>(
          reinterpret_cast<char*>(&_impl_.msg_type_),
          reinterpret_cast<char*>(&other->_impl_.msg_type_));
}

::google::protobuf::Metadata RPCHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[4]);
}
// ===================================================================

class Addr2Sym::_Internal {
 public:
};

Addr2Sym::Addr2Sym(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.Addr2Sym)
}
inline PROTOBUF_NDEBUG_INLINE Addr2Sym::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Addr2Sym::Addr2Sym(
    ::google::protobuf::Arena* arena,
    const Addr2Sym& from)
    : ::google::protobuf::Message(arena) {
  Addr2Sym* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.address_ = from._impl_.address_;

  // @@protoc_insertion_point(copy_constructor:x64.Addr2Sym)
}
inline PROTOBUF_NDEBUG_INLINE Addr2Sym::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Addr2Sym::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.address_ = {};
}
Addr2Sym::~Addr2Sym() {
  // @@protoc_insertion_point(destructor:x64.Addr2Sym)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Addr2Sym::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Addr2Sym::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.Addr2Sym)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.address_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Addr2Sym::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 25, 2> Addr2Sym::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Addr2Sym_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Addr2Sym, _impl_.name_)}},
    // uint64 address = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Addr2Sym, _impl_.address_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Addr2Sym, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 address = 1;
    {PROTOBUF_FIELD_OFFSET(Addr2Sym, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Addr2Sym, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\0\4\0\0\0\0\0"
    "x64.Addr2Sym"
    "name"
  }},
};

::uint8_t* Addr2Sym::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.Addr2Sym)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_address(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "x64.Addr2Sym.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.Addr2Sym)
  return target;
}

::size_t Addr2Sym::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.Addr2Sym)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Addr2Sym::_class_data_ = {
    Addr2Sym::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Addr2Sym::GetClassData() const {
  return &_class_data_;
}

void Addr2Sym::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Addr2Sym*>(&to_msg);
  auto& from = static_cast<const Addr2Sym&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.Addr2Sym)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Addr2Sym::CopyFrom(const Addr2Sym& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.Addr2Sym)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Addr2Sym::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Addr2Sym::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Addr2Sym::InternalSwap(Addr2Sym* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.address_, other->_impl_.address_);
}

::google::protobuf::Metadata Addr2Sym::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[5]);
}
// ===================================================================

class Page::_Internal {
 public:
};

Page::Page(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.Page)
}
inline PROTOBUF_NDEBUG_INLINE Page::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_(arena, from.content_),
        _cached_size_{0} {}

Page::Page(
    ::google::protobuf::Arena* arena,
    const Page& from)
    : ::google::protobuf::Message(arena) {
  Page* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, address_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, address_),
           offsetof(Impl_, content_size_) -
               offsetof(Impl_, address_) +
               sizeof(Impl_::content_size_));

  // @@protoc_insertion_point(copy_constructor:x64.Page)
}
inline PROTOBUF_NDEBUG_INLINE Page::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void Page::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, address_),
           0,
           offsetof(Impl_, content_size_) -
               offsetof(Impl_, address_) +
               sizeof(Impl_::content_size_));
}
Page::~Page() {
  // @@protoc_insertion_point(destructor:x64.Page)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Page::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.Page)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  ::memset(&_impl_.address_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.content_size_) -
      reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.content_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Page::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Page::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Page_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 address = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Page, _impl_.address_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Page, _impl_.address_)}},
    // uint64 runtime_revision = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Page, _impl_.runtime_revision_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Page, _impl_.runtime_revision_)}},
    // uint64 client_revision = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Page, _impl_.client_revision_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Page, _impl_.client_revision_)}},
    // uint32 content_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Page, _impl_.content_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Page, _impl_.content_size_)}},
    // bytes content = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Page, _impl_.content_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 address = 1;
    {PROTOBUF_FIELD_OFFSET(Page, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 runtime_revision = 2;
    {PROTOBUF_FIELD_OFFSET(Page, _impl_.runtime_revision_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 client_revision = 3;
    {PROTOBUF_FIELD_OFFSET(Page, _impl_.client_revision_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 content_size = 4;
    {PROTOBUF_FIELD_OFFSET(Page, _impl_.content_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes content = 5;
    {PROTOBUF_FIELD_OFFSET(Page, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Page::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.Page)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_address(), target);
  }

  // uint64 runtime_revision = 2;
  if (this->_internal_runtime_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_runtime_revision(), target);
  }

  // uint64 client_revision = 3;
  if (this->_internal_client_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_client_revision(), target);
  }

  // uint32 content_size = 4;
  if (this->_internal_content_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_content_size(), target);
  }

  // bytes content = 5;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.Page)
  return target;
}

::size_t Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.Page)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 5;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_address());
  }

  // uint64 runtime_revision = 2;
  if (this->_internal_runtime_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_runtime_revision());
  }

  // uint64 client_revision = 3;
  if (this->_internal_client_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_client_revision());
  }

  // uint32 content_size = 4;
  if (this->_internal_content_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_content_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Page::_class_data_ = {
    Page::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Page::GetClassData() const {
  return &_class_data_;
}

void Page::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Page*>(&to_msg);
  auto& from = static_cast<const Page&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.Page)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_runtime_revision() != 0) {
    _this->_internal_set_runtime_revision(from._internal_runtime_revision());
  }
  if (from._internal_client_revision() != 0) {
    _this->_internal_set_client_revision(from._internal_client_revision());
  }
  if (from._internal_content_size() != 0) {
    _this->_internal_set_content_size(from._internal_content_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Page::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Page::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Page::InternalSwap(Page* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Page, _impl_.content_size_)
      + sizeof(Page::_impl_.content_size_)
      - PROTOBUF_FIELD_OFFSET(Page, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::google::protobuf::Metadata Page::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[6]);
}
// ===================================================================

class LoadLibMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<LoadLibMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_._has_bits_);
  static const ::x64::RPCHeader& header(const LoadLibMsg* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::x64::RPCHeader& LoadLibMsg::_Internal::header(const LoadLibMsg* msg) {
  return *msg->_impl_.header_;
}
LoadLibMsg::LoadLibMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.LoadLibMsg)
}
inline PROTOBUF_NDEBUG_INLINE LoadLibMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        addr2sym_{visibility, arena, from.addr2sym_},
        library_name_(arena, from.library_name_) {}

LoadLibMsg::LoadLibMsg(
    ::google::protobuf::Arena* arena,
    const LoadLibMsg& from)
    : ::google::protobuf::Message(arena) {
  LoadLibMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::x64::RPCHeader>(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:x64.LoadLibMsg)
}
inline PROTOBUF_NDEBUG_INLINE LoadLibMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        addr2sym_{visibility, arena},
        library_name_(arena) {}

inline void LoadLibMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
LoadLibMsg::~LoadLibMsg() {
  // @@protoc_insertion_point(destructor:x64.LoadLibMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadLibMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.library_name_.Destroy();
  delete _impl_.header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoadLibMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.LoadLibMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr2sym_.Clear();
  _impl_.library_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoadLibMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 35, 2> LoadLibMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoadLibMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .x64.RPCHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.header_)}},
    // string library_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.library_name_)}},
    // repeated .x64.Addr2Sym addr2sym = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.addr2sym_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .x64.RPCHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string library_name = 2;
    {PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.library_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .x64.Addr2Sym addr2sym = 3;
    {PROTOBUF_FIELD_OFFSET(LoadLibMsg, _impl_.addr2sym_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::RPCHeader>()},
    {::_pbi::TcParser::GetTable<::x64::Addr2Sym>()},
  }}, {{
    "\16\0\14\0\0\0\0\0"
    "x64.LoadLibMsg"
    "library_name"
  }},
};

::uint8_t* LoadLibMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.LoadLibMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .x64.RPCHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // string library_name = 2;
  if (!this->_internal_library_name().empty()) {
    const std::string& _s = this->_internal_library_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "x64.LoadLibMsg.library_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .x64.Addr2Sym addr2sym = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_addr2sym_size()); i < n; i++) {
    const auto& repfield = this->_internal_addr2sym().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.LoadLibMsg)
  return target;
}

::size_t LoadLibMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.LoadLibMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .x64.Addr2Sym addr2sym = 3;
  total_size += 1UL * this->_internal_addr2sym_size();
  for (const auto& msg : this->_internal_addr2sym()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string library_name = 2;
  if (!this->_internal_library_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_library_name());
  }

  // .x64.RPCHeader header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoadLibMsg::_class_data_ = {
    LoadLibMsg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoadLibMsg::GetClassData() const {
  return &_class_data_;
}

void LoadLibMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoadLibMsg*>(&to_msg);
  auto& from = static_cast<const LoadLibMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.LoadLibMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_addr2sym()->MergeFrom(
      from._internal_addr2sym());
  if (!from._internal_library_name().empty()) {
    _this->_internal_set_library_name(from._internal_library_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_header()->::x64::RPCHeader::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadLibMsg::CopyFrom(const LoadLibMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.LoadLibMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoadLibMsg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoadLibMsg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoadLibMsg::InternalSwap(LoadLibMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.addr2sym_.InternalSwap(&other->_impl_.addr2sym_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.library_name_, &other->_impl_.library_name_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata LoadLibMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[7]);
}
// ===================================================================

class UserContext::_Internal {
 public:
  using HasBits = decltype(std::declval<UserContext>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserContext, _impl_._has_bits_);
  static const ::x64::CPUState& cpu(const UserContext* msg);
  static void set_has_cpu(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::x64::CPUState& UserContext::_Internal::cpu(const UserContext* msg) {
  return *msg->_impl_.cpu_;
}
UserContext::UserContext(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.UserContext)
}
inline PROTOBUF_NDEBUG_INLINE UserContext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UserContext::UserContext(
    ::google::protobuf::Arena* arena,
    const UserContext& from)
    : ::google::protobuf::Message(arena) {
  UserContext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cpu_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::x64::CPUState>(arena, *from._impl_.cpu_)
                : nullptr;
  _impl_.stack_bottom_ = from._impl_.stack_bottom_;

  // @@protoc_insertion_point(copy_constructor:x64.UserContext)
}
inline PROTOBUF_NDEBUG_INLINE UserContext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserContext::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cpu_),
           0,
           offsetof(Impl_, stack_bottom_) -
               offsetof(Impl_, cpu_) +
               sizeof(Impl_::stack_bottom_));
}
UserContext::~UserContext() {
  // @@protoc_insertion_point(destructor:x64.UserContext)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserContext::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.cpu_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserContext::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.UserContext)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cpu_ != nullptr);
    _impl_.cpu_->Clear();
  }
  _impl_.stack_bottom_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserContext::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UserContext::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserContext, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserContext_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 stack_bottom = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UserContext, _impl_.stack_bottom_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UserContext, _impl_.stack_bottom_)}},
    // .x64.CPUState cpu = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserContext, _impl_.cpu_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .x64.CPUState cpu = 1;
    {PROTOBUF_FIELD_OFFSET(UserContext, _impl_.cpu_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 stack_bottom = 2;
    {PROTOBUF_FIELD_OFFSET(UserContext, _impl_.stack_bottom_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::CPUState>()},
  }}, {{
  }},
};

::uint8_t* UserContext::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.UserContext)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .x64.CPUState cpu = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::cpu(this),
        _Internal::cpu(this).GetCachedSize(), target, stream);
  }

  // uint64 stack_bottom = 2;
  if (this->_internal_stack_bottom() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_stack_bottom(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.UserContext)
  return target;
}

::size_t UserContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.UserContext)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .x64.CPUState cpu = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cpu_);
  }

  // uint64 stack_bottom = 2;
  if (this->_internal_stack_bottom() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_stack_bottom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserContext::_class_data_ = {
    UserContext::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserContext::GetClassData() const {
  return &_class_data_;
}

void UserContext::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserContext*>(&to_msg);
  auto& from = static_cast<const UserContext&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.UserContext)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_cpu()->::x64::CPUState::MergeFrom(
        from._internal_cpu());
  }
  if (from._internal_stack_bottom() != 0) {
    _this->_internal_set_stack_bottom(from._internal_stack_bottom());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserContext::CopyFrom(const UserContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.UserContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserContext::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserContext::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserContext::InternalSwap(UserContext* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserContext, _impl_.stack_bottom_)
      + sizeof(UserContext::_impl_.stack_bottom_)
      - PROTOBUF_FIELD_OFFSET(UserContext, _impl_.cpu_)>(
          reinterpret_cast<char*>(&_impl_.cpu_),
          reinterpret_cast<char*>(&other->_impl_.cpu_));
}

::google::protobuf::Metadata UserContext::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[8]);
}
// ===================================================================

class InvokeFuncMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<InvokeFuncMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_._has_bits_);
  static const ::x64::RPCHeader& header(const InvokeFuncMsg* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::x64::UserContext& ctx(const InvokeFuncMsg* msg);
  static void set_has_ctx(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::x64::RPCHeader& InvokeFuncMsg::_Internal::header(const InvokeFuncMsg* msg) {
  return *msg->_impl_.header_;
}
const ::x64::UserContext& InvokeFuncMsg::_Internal::ctx(const InvokeFuncMsg* msg) {
  return *msg->_impl_.ctx_;
}
InvokeFuncMsg::InvokeFuncMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.InvokeFuncMsg)
}
inline PROTOBUF_NDEBUG_INLINE InvokeFuncMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_{visibility, arena, from.page_} {}

InvokeFuncMsg::InvokeFuncMsg(
    ::google::protobuf::Arena* arena,
    const InvokeFuncMsg& from)
    : ::google::protobuf::Message(arena) {
  InvokeFuncMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::x64::RPCHeader>(arena, *from._impl_.header_)
                : nullptr;
  _impl_.ctx_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::x64::UserContext>(arena, *from._impl_.ctx_)
                : nullptr;
  _impl_.invokefunc_id_ = from._impl_.invokefunc_id_;

  // @@protoc_insertion_point(copy_constructor:x64.InvokeFuncMsg)
}
inline PROTOBUF_NDEBUG_INLINE InvokeFuncMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        page_{visibility, arena} {}

inline void InvokeFuncMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, invokefunc_id_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::invokefunc_id_));
}
InvokeFuncMsg::~InvokeFuncMsg() {
  // @@protoc_insertion_point(destructor:x64.InvokeFuncMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InvokeFuncMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  delete _impl_.ctx_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InvokeFuncMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.InvokeFuncMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.page_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.ctx_ != nullptr);
      _impl_.ctx_->Clear();
    }
  }
  _impl_.invokefunc_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InvokeFuncMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> InvokeFuncMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InvokeFuncMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .x64.Page page = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.page_)}},
    // .x64.RPCHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.header_)}},
    // uint64 invokefunc_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InvokeFuncMsg, _impl_.invokefunc_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.invokefunc_id_)}},
    // .x64.UserContext ctx = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.ctx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .x64.RPCHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 invokefunc_id = 2;
    {PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.invokefunc_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .x64.UserContext ctx = 3;
    {PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.ctx_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .x64.Page page = 4;
    {PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.page_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::RPCHeader>()},
    {::_pbi::TcParser::GetTable<::x64::UserContext>()},
    {::_pbi::TcParser::GetTable<::x64::Page>()},
  }}, {{
  }},
};

::uint8_t* InvokeFuncMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.InvokeFuncMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .x64.RPCHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // uint64 invokefunc_id = 2;
  if (this->_internal_invokefunc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_invokefunc_id(), target);
  }

  // .x64.UserContext ctx = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::ctx(this),
        _Internal::ctx(this).GetCachedSize(), target, stream);
  }

  // repeated .x64.Page page = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_page_size()); i < n; i++) {
    const auto& repfield = this->_internal_page().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.InvokeFuncMsg)
  return target;
}

::size_t InvokeFuncMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.InvokeFuncMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .x64.Page page = 4;
  total_size += 1UL * this->_internal_page_size();
  for (const auto& msg : this->_internal_page()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .x64.RPCHeader header = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
    }

    // .x64.UserContext ctx = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ctx_);
    }

  }
  // uint64 invokefunc_id = 2;
  if (this->_internal_invokefunc_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_invokefunc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InvokeFuncMsg::_class_data_ = {
    InvokeFuncMsg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InvokeFuncMsg::GetClassData() const {
  return &_class_data_;
}

void InvokeFuncMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InvokeFuncMsg*>(&to_msg);
  auto& from = static_cast<const InvokeFuncMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.InvokeFuncMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_page()->MergeFrom(
      from._internal_page());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_header()->::x64::RPCHeader::MergeFrom(
          from._internal_header());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_ctx()->::x64::UserContext::MergeFrom(
          from._internal_ctx());
    }
  }
  if (from._internal_invokefunc_id() != 0) {
    _this->_internal_set_invokefunc_id(from._internal_invokefunc_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeFuncMsg::CopyFrom(const InvokeFuncMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.InvokeFuncMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InvokeFuncMsg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InvokeFuncMsg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InvokeFuncMsg::InternalSwap(InvokeFuncMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.page_.InternalSwap(&other->_impl_.page_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.invokefunc_id_)
      + sizeof(InvokeFuncMsg::_impl_.invokefunc_id_)
      - PROTOBUF_FIELD_OFFSET(InvokeFuncMsg, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata InvokeFuncMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[9]);
}
// ===================================================================

class PullPageMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<PullPageMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_._has_bits_);
  static const ::x64::RPCHeader& header(const PullPageMsg* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::x64::RPCHeader& PullPageMsg::_Internal::header(const PullPageMsg* msg) {
  return *msg->_impl_.header_;
}
PullPageMsg::PullPageMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:x64.PullPageMsg)
}
inline PROTOBUF_NDEBUG_INLINE PullPageMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_{visibility, arena, from.page_} {}

PullPageMsg::PullPageMsg(
    ::google::protobuf::Arena* arena,
    const PullPageMsg& from)
    : ::google::protobuf::Message(arena) {
  PullPageMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::x64::RPCHeader>(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:x64.PullPageMsg)
}
inline PROTOBUF_NDEBUG_INLINE PullPageMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        page_{visibility, arena} {}

inline void PullPageMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
PullPageMsg::~PullPageMsg() {
  // @@protoc_insertion_point(destructor:x64.PullPageMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PullPageMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PullPageMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:x64.PullPageMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.page_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PullPageMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PullPageMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PullPageMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .x64.Page page = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_.page_)}},
    // .x64.RPCHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .x64.RPCHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .x64.Page page = 2;
    {PROTOBUF_FIELD_OFFSET(PullPageMsg, _impl_.page_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::x64::RPCHeader>()},
    {::_pbi::TcParser::GetTable<::x64::Page>()},
  }}, {{
  }},
};

::uint8_t* PullPageMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:x64.PullPageMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .x64.RPCHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // repeated .x64.Page page = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_page_size()); i < n; i++) {
    const auto& repfield = this->_internal_page().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:x64.PullPageMsg)
  return target;
}

::size_t PullPageMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x64.PullPageMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .x64.Page page = 2;
  total_size += 1UL * this->_internal_page_size();
  for (const auto& msg : this->_internal_page()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .x64.RPCHeader header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PullPageMsg::_class_data_ = {
    PullPageMsg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PullPageMsg::GetClassData() const {
  return &_class_data_;
}

void PullPageMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PullPageMsg*>(&to_msg);
  auto& from = static_cast<const PullPageMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:x64.PullPageMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_page()->MergeFrom(
      from._internal_page());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_header()->::x64::RPCHeader::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PullPageMsg::CopyFrom(const PullPageMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x64.PullPageMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PullPageMsg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PullPageMsg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PullPageMsg::InternalSwap(PullPageMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.page_.InternalSwap(&other->_impl_.page_);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata PullPageMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[10]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace x64
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
