// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_2eproto;
namespace x64 {
class Addr2Sym;
struct Addr2SymDefaultTypeInternal;
extern Addr2SymDefaultTypeInternal _Addr2Sym_default_instance_;
class CPUState;
struct CPUStateDefaultTypeInternal;
extern CPUStateDefaultTypeInternal _CPUState_default_instance_;
class InvokeFuncMsg;
struct InvokeFuncMsgDefaultTypeInternal;
extern InvokeFuncMsgDefaultTypeInternal _InvokeFuncMsg_default_instance_;
class LoadLibMsg;
struct LoadLibMsgDefaultTypeInternal;
extern LoadLibMsgDefaultTypeInternal _LoadLibMsg_default_instance_;
class Page;
struct PageDefaultTypeInternal;
extern PageDefaultTypeInternal _Page_default_instance_;
class PullPageMsg;
struct PullPageMsgDefaultTypeInternal;
extern PullPageMsgDefaultTypeInternal _PullPageMsg_default_instance_;
class RPCHeader;
struct RPCHeaderDefaultTypeInternal;
extern RPCHeaderDefaultTypeInternal _RPCHeader_default_instance_;
class UserContext;
struct UserContextDefaultTypeInternal;
extern UserContextDefaultTypeInternal _UserContext_default_instance_;
class X64FPRegs;
struct X64FPRegsDefaultTypeInternal;
extern X64FPRegsDefaultTypeInternal _X64FPRegs_default_instance_;
class X64FPXReg;
struct X64FPXRegDefaultTypeInternal;
extern X64FPXRegDefaultTypeInternal _X64FPXReg_default_instance_;
class X64XMMReg;
struct X64XMMRegDefaultTypeInternal;
extern X64XMMRegDefaultTypeInternal _X64XMMReg_default_instance_;
}  // namespace x64
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace x64 {

// ===================================================================


// -------------------------------------------------------------------

class X64XMMReg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.X64XMMReg) */ {
 public:
  inline X64XMMReg() : X64XMMReg(nullptr) {}
  ~X64XMMReg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR X64XMMReg(::google::protobuf::internal::ConstantInitialized);

  inline X64XMMReg(const X64XMMReg& from)
      : X64XMMReg(nullptr, from) {}
  X64XMMReg(X64XMMReg&& from) noexcept
    : X64XMMReg() {
    *this = ::std::move(from);
  }

  inline X64XMMReg& operator=(const X64XMMReg& from) {
    CopyFrom(from);
    return *this;
  }
  inline X64XMMReg& operator=(X64XMMReg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const X64XMMReg& default_instance() {
    return *internal_default_instance();
  }
  static inline const X64XMMReg* internal_default_instance() {
    return reinterpret_cast<const X64XMMReg*>(
               &_X64XMMReg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(X64XMMReg& a, X64XMMReg& b) {
    a.Swap(&b);
  }
  inline void Swap(X64XMMReg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(X64XMMReg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  X64XMMReg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<X64XMMReg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const X64XMMReg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const X64XMMReg& from) {
    X64XMMReg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(X64XMMReg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.X64XMMReg";
  }
  protected:
  explicit X64XMMReg(::google::protobuf::Arena* arena);
  X64XMMReg(::google::protobuf::Arena* arena, const X64XMMReg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
  };
  // repeated uint32 element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;

  public:
  void clear_element() ;
  ::uint32_t element(int index) const;
  void set_element(int index, ::uint32_t value);
  void add_element(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& element() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_element();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_element() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_element();

  public:
  // @@protoc_insertion_point(class_scope:x64.X64XMMReg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> element_;
    mutable ::google::protobuf::internal::CachedSize _element_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class X64FPXReg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.X64FPXReg) */ {
 public:
  inline X64FPXReg() : X64FPXReg(nullptr) {}
  ~X64FPXReg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR X64FPXReg(::google::protobuf::internal::ConstantInitialized);

  inline X64FPXReg(const X64FPXReg& from)
      : X64FPXReg(nullptr, from) {}
  X64FPXReg(X64FPXReg&& from) noexcept
    : X64FPXReg() {
    *this = ::std::move(from);
  }

  inline X64FPXReg& operator=(const X64FPXReg& from) {
    CopyFrom(from);
    return *this;
  }
  inline X64FPXReg& operator=(X64FPXReg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const X64FPXReg& default_instance() {
    return *internal_default_instance();
  }
  static inline const X64FPXReg* internal_default_instance() {
    return reinterpret_cast<const X64FPXReg*>(
               &_X64FPXReg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(X64FPXReg& a, X64FPXReg& b) {
    a.Swap(&b);
  }
  inline void Swap(X64FPXReg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(X64FPXReg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  X64FPXReg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<X64FPXReg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const X64FPXReg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const X64FPXReg& from) {
    X64FPXReg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(X64FPXReg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.X64FPXReg";
  }
  protected:
  explicit X64FPXReg(::google::protobuf::Arena* arena);
  X64FPXReg(::google::protobuf::Arena* arena, const X64FPXReg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignificandFieldNumber = 1,
    kReservedFieldNumber = 3,
    kExponentFieldNumber = 2,
  };
  // repeated uint32 significand = 1;
  int significand_size() const;
  private:
  int _internal_significand_size() const;

  public:
  void clear_significand() ;
  ::uint32_t significand(int index) const;
  void set_significand(int index, ::uint32_t value);
  void add_significand(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& significand() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_significand();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_significand() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_significand();

  public:
  // repeated uint32 reserved = 3;
  int reserved_size() const;
  private:
  int _internal_reserved_size() const;

  public:
  void clear_reserved() ;
  ::uint32_t reserved(int index) const;
  void set_reserved(int index, ::uint32_t value);
  void add_reserved(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& reserved() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_reserved();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_reserved() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_reserved();

  public:
  // uint32 exponent = 2;
  void clear_exponent() ;
  ::uint32_t exponent() const;
  void set_exponent(::uint32_t value);

  private:
  ::uint32_t _internal_exponent() const;
  void _internal_set_exponent(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.X64FPXReg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> significand_;
    mutable ::google::protobuf::internal::CachedSize _significand_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> reserved_;
    mutable ::google::protobuf::internal::CachedSize _reserved_cached_byte_size_;
    ::uint32_t exponent_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class RPCHeader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.RPCHeader) */ {
 public:
  inline RPCHeader() : RPCHeader(nullptr) {}
  ~RPCHeader() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RPCHeader(::google::protobuf::internal::ConstantInitialized);

  inline RPCHeader(const RPCHeader& from)
      : RPCHeader(nullptr, from) {}
  RPCHeader(RPCHeader&& from) noexcept
    : RPCHeader() {
    *this = ::std::move(from);
  }

  inline RPCHeader& operator=(const RPCHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPCHeader& operator=(RPCHeader&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPCHeader& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPCHeader* internal_default_instance() {
    return reinterpret_cast<const RPCHeader*>(
               &_RPCHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RPCHeader& a, RPCHeader& b) {
    a.Swap(&b);
  }
  inline void Swap(RPCHeader* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPCHeader* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPCHeader* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RPCHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPCHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RPCHeader& from) {
    RPCHeader::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPCHeader* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.RPCHeader";
  }
  protected:
  explicit RPCHeader(::google::protobuf::Arena* arena);
  RPCHeader(::google::protobuf::Arena* arena, const RPCHeader& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 3,
    kMsgTypeFieldNumber = 1,
    kStatusFieldNumber = 2,
    kPayloadSizeFieldNumber = 4,
  };
  // string client_id = 3;
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // uint32 msg_type = 1;
  void clear_msg_type() ;
  ::uint32_t msg_type() const;
  void set_msg_type(::uint32_t value);

  private:
  ::uint32_t _internal_msg_type() const;
  void _internal_set_msg_type(::uint32_t value);

  public:
  // uint32 status = 2;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint64 payload_size = 4;
  void clear_payload_size() ;
  ::uint64_t payload_size() const;
  void set_payload_size(::uint64_t value);

  private:
  ::uint64_t _internal_payload_size() const;
  void _internal_set_payload_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.RPCHeader)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      31, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::uint32_t msg_type_;
    ::uint32_t status_;
    ::uint64_t payload_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class Page final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.Page) */ {
 public:
  inline Page() : Page(nullptr) {}
  ~Page() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Page(::google::protobuf::internal::ConstantInitialized);

  inline Page(const Page& from)
      : Page(nullptr, from) {}
  Page(Page&& from) noexcept
    : Page() {
    *this = ::std::move(from);
  }

  inline Page& operator=(const Page& from) {
    CopyFrom(from);
    return *this;
  }
  inline Page& operator=(Page&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Page& default_instance() {
    return *internal_default_instance();
  }
  static inline const Page* internal_default_instance() {
    return reinterpret_cast<const Page*>(
               &_Page_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Page& a, Page& b) {
    a.Swap(&b);
  }
  inline void Swap(Page* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Page* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Page* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Page>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Page& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Page& from) {
    Page::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Page* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.Page";
  }
  protected:
  explicit Page(::google::protobuf::Arena* arena);
  Page(::google::protobuf::Arena* arena, const Page& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 5,
    kAddressFieldNumber = 1,
    kRuntimeRevisionFieldNumber = 2,
    kClientRevisionFieldNumber = 3,
    kContentSizeFieldNumber = 4,
  };
  // bytes content = 5;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // uint64 address = 1;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // uint64 runtime_revision = 2;
  void clear_runtime_revision() ;
  ::uint64_t runtime_revision() const;
  void set_runtime_revision(::uint64_t value);

  private:
  ::uint64_t _internal_runtime_revision() const;
  void _internal_set_runtime_revision(::uint64_t value);

  public:
  // uint64 client_revision = 3;
  void clear_client_revision() ;
  ::uint64_t client_revision() const;
  void set_client_revision(::uint64_t value);

  private:
  ::uint64_t _internal_client_revision() const;
  void _internal_set_client_revision(::uint64_t value);

  public:
  // uint32 content_size = 4;
  void clear_content_size() ;
  ::uint32_t content_size() const;
  void set_content_size(::uint32_t value);

  private:
  ::uint32_t _internal_content_size() const;
  void _internal_set_content_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.Page)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::uint64_t address_;
    ::uint64_t runtime_revision_;
    ::uint64_t client_revision_;
    ::uint32_t content_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class Addr2Sym final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.Addr2Sym) */ {
 public:
  inline Addr2Sym() : Addr2Sym(nullptr) {}
  ~Addr2Sym() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Addr2Sym(::google::protobuf::internal::ConstantInitialized);

  inline Addr2Sym(const Addr2Sym& from)
      : Addr2Sym(nullptr, from) {}
  Addr2Sym(Addr2Sym&& from) noexcept
    : Addr2Sym() {
    *this = ::std::move(from);
  }

  inline Addr2Sym& operator=(const Addr2Sym& from) {
    CopyFrom(from);
    return *this;
  }
  inline Addr2Sym& operator=(Addr2Sym&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Addr2Sym& default_instance() {
    return *internal_default_instance();
  }
  static inline const Addr2Sym* internal_default_instance() {
    return reinterpret_cast<const Addr2Sym*>(
               &_Addr2Sym_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Addr2Sym& a, Addr2Sym& b) {
    a.Swap(&b);
  }
  inline void Swap(Addr2Sym* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Addr2Sym* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Addr2Sym* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Addr2Sym>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Addr2Sym& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Addr2Sym& from) {
    Addr2Sym::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Addr2Sym* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.Addr2Sym";
  }
  protected:
  explicit Addr2Sym(::google::protobuf::Arena* arena);
  Addr2Sym(::google::protobuf::Arena* arena, const Addr2Sym& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kAddressFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint64 address = 1;
  void clear_address() ;
  ::uint64_t address() const;
  void set_address(::uint64_t value);

  private:
  ::uint64_t _internal_address() const;
  void _internal_set_address(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.Addr2Sym)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      25, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t address_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class X64FPRegs final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.X64FPRegs) */ {
 public:
  inline X64FPRegs() : X64FPRegs(nullptr) {}
  ~X64FPRegs() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR X64FPRegs(::google::protobuf::internal::ConstantInitialized);

  inline X64FPRegs(const X64FPRegs& from)
      : X64FPRegs(nullptr, from) {}
  X64FPRegs(X64FPRegs&& from) noexcept
    : X64FPRegs() {
    *this = ::std::move(from);
  }

  inline X64FPRegs& operator=(const X64FPRegs& from) {
    CopyFrom(from);
    return *this;
  }
  inline X64FPRegs& operator=(X64FPRegs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const X64FPRegs& default_instance() {
    return *internal_default_instance();
  }
  static inline const X64FPRegs* internal_default_instance() {
    return reinterpret_cast<const X64FPRegs*>(
               &_X64FPRegs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(X64FPRegs& a, X64FPRegs& b) {
    a.Swap(&b);
  }
  inline void Swap(X64FPRegs* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(X64FPRegs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  X64FPRegs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<X64FPRegs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const X64FPRegs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const X64FPRegs& from) {
    X64FPRegs::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(X64FPRegs* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.X64FPRegs";
  }
  protected:
  explicit X64FPRegs(::google::protobuf::Arena* arena);
  X64FPRegs(::google::protobuf::Arena* arena, const X64FPRegs& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStFieldNumber = 9,
    kXmmFieldNumber = 10,
    kReservedFieldNumber = 11,
    kCwdFieldNumber = 1,
    kSwdFieldNumber = 2,
    kFtwFieldNumber = 3,
    kFopFieldNumber = 4,
    kRipFieldNumber = 5,
    kRdpFieldNumber = 6,
    kMxcsrFieldNumber = 7,
    kMxcrMaskFieldNumber = 8,
  };
  // repeated .x64.X64FPXReg st = 9;
  int st_size() const;
  private:
  int _internal_st_size() const;

  public:
  void clear_st() ;
  ::x64::X64FPXReg* mutable_st(int index);
  ::google::protobuf::RepeatedPtrField< ::x64::X64FPXReg >*
      mutable_st();
  private:
  const ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>& _internal_st() const;
  ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>* _internal_mutable_st();
  public:
  const ::x64::X64FPXReg& st(int index) const;
  ::x64::X64FPXReg* add_st();
  const ::google::protobuf::RepeatedPtrField< ::x64::X64FPXReg >&
      st() const;
  // repeated .x64.X64XMMReg xmm = 10;
  int xmm_size() const;
  private:
  int _internal_xmm_size() const;

  public:
  void clear_xmm() ;
  ::x64::X64XMMReg* mutable_xmm(int index);
  ::google::protobuf::RepeatedPtrField< ::x64::X64XMMReg >*
      mutable_xmm();
  private:
  const ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>& _internal_xmm() const;
  ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>* _internal_mutable_xmm();
  public:
  const ::x64::X64XMMReg& xmm(int index) const;
  ::x64::X64XMMReg* add_xmm();
  const ::google::protobuf::RepeatedPtrField< ::x64::X64XMMReg >&
      xmm() const;
  // repeated uint32 reserved = 11;
  int reserved_size() const;
  private:
  int _internal_reserved_size() const;

  public:
  void clear_reserved() ;
  ::uint32_t reserved(int index) const;
  void set_reserved(int index, ::uint32_t value);
  void add_reserved(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& reserved() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_reserved();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_reserved() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_reserved();

  public:
  // uint32 cwd = 1;
  void clear_cwd() ;
  ::uint32_t cwd() const;
  void set_cwd(::uint32_t value);

  private:
  ::uint32_t _internal_cwd() const;
  void _internal_set_cwd(::uint32_t value);

  public:
  // uint32 swd = 2;
  void clear_swd() ;
  ::uint32_t swd() const;
  void set_swd(::uint32_t value);

  private:
  ::uint32_t _internal_swd() const;
  void _internal_set_swd(::uint32_t value);

  public:
  // uint32 ftw = 3;
  void clear_ftw() ;
  ::uint32_t ftw() const;
  void set_ftw(::uint32_t value);

  private:
  ::uint32_t _internal_ftw() const;
  void _internal_set_ftw(::uint32_t value);

  public:
  // uint32 fop = 4;
  void clear_fop() ;
  ::uint32_t fop() const;
  void set_fop(::uint32_t value);

  private:
  ::uint32_t _internal_fop() const;
  void _internal_set_fop(::uint32_t value);

  public:
  // uint64 rip = 5;
  void clear_rip() ;
  ::uint64_t rip() const;
  void set_rip(::uint64_t value);

  private:
  ::uint64_t _internal_rip() const;
  void _internal_set_rip(::uint64_t value);

  public:
  // uint64 rdp = 6;
  void clear_rdp() ;
  ::uint64_t rdp() const;
  void set_rdp(::uint64_t value);

  private:
  ::uint64_t _internal_rdp() const;
  void _internal_set_rdp(::uint64_t value);

  public:
  // uint32 mxcsr = 7;
  void clear_mxcsr() ;
  ::uint32_t mxcsr() const;
  void set_mxcsr(::uint32_t value);

  private:
  ::uint32_t _internal_mxcsr() const;
  void _internal_set_mxcsr(::uint32_t value);

  public:
  // uint32 mxcr_mask = 8;
  void clear_mxcr_mask() ;
  ::uint32_t mxcr_mask() const;
  void set_mxcr_mask(::uint32_t value);

  private:
  ::uint32_t _internal_mxcr_mask() const;
  void _internal_set_mxcr_mask(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.X64FPRegs)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::x64::X64FPXReg > st_;
    ::google::protobuf::RepeatedPtrField< ::x64::X64XMMReg > xmm_;
    ::google::protobuf::RepeatedField<::uint32_t> reserved_;
    mutable ::google::protobuf::internal::CachedSize _reserved_cached_byte_size_;
    ::uint32_t cwd_;
    ::uint32_t swd_;
    ::uint32_t ftw_;
    ::uint32_t fop_;
    ::uint64_t rip_;
    ::uint64_t rdp_;
    ::uint32_t mxcsr_;
    ::uint32_t mxcr_mask_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class PullPageMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.PullPageMsg) */ {
 public:
  inline PullPageMsg() : PullPageMsg(nullptr) {}
  ~PullPageMsg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PullPageMsg(::google::protobuf::internal::ConstantInitialized);

  inline PullPageMsg(const PullPageMsg& from)
      : PullPageMsg(nullptr, from) {}
  PullPageMsg(PullPageMsg&& from) noexcept
    : PullPageMsg() {
    *this = ::std::move(from);
  }

  inline PullPageMsg& operator=(const PullPageMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PullPageMsg& operator=(PullPageMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PullPageMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const PullPageMsg* internal_default_instance() {
    return reinterpret_cast<const PullPageMsg*>(
               &_PullPageMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PullPageMsg& a, PullPageMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(PullPageMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PullPageMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PullPageMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PullPageMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PullPageMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PullPageMsg& from) {
    PullPageMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PullPageMsg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.PullPageMsg";
  }
  protected:
  explicit PullPageMsg(::google::protobuf::Arena* arena);
  PullPageMsg(::google::protobuf::Arena* arena, const PullPageMsg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .x64.Page page = 2;
  int page_size() const;
  private:
  int _internal_page_size() const;

  public:
  void clear_page() ;
  ::x64::Page* mutable_page(int index);
  ::google::protobuf::RepeatedPtrField< ::x64::Page >*
      mutable_page();
  private:
  const ::google::protobuf::RepeatedPtrField<::x64::Page>& _internal_page() const;
  ::google::protobuf::RepeatedPtrField<::x64::Page>* _internal_mutable_page();
  public:
  const ::x64::Page& page(int index) const;
  ::x64::Page* add_page();
  const ::google::protobuf::RepeatedPtrField< ::x64::Page >&
      page() const;
  // .x64.RPCHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::x64::RPCHeader& header() const;
  PROTOBUF_NODISCARD ::x64::RPCHeader* release_header();
  ::x64::RPCHeader* mutable_header();
  void set_allocated_header(::x64::RPCHeader* value);
  void unsafe_arena_set_allocated_header(::x64::RPCHeader* value);
  ::x64::RPCHeader* unsafe_arena_release_header();

  private:
  const ::x64::RPCHeader& _internal_header() const;
  ::x64::RPCHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:x64.PullPageMsg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::x64::Page > page_;
    ::x64::RPCHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class LoadLibMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.LoadLibMsg) */ {
 public:
  inline LoadLibMsg() : LoadLibMsg(nullptr) {}
  ~LoadLibMsg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoadLibMsg(::google::protobuf::internal::ConstantInitialized);

  inline LoadLibMsg(const LoadLibMsg& from)
      : LoadLibMsg(nullptr, from) {}
  LoadLibMsg(LoadLibMsg&& from) noexcept
    : LoadLibMsg() {
    *this = ::std::move(from);
  }

  inline LoadLibMsg& operator=(const LoadLibMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadLibMsg& operator=(LoadLibMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadLibMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadLibMsg* internal_default_instance() {
    return reinterpret_cast<const LoadLibMsg*>(
               &_LoadLibMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LoadLibMsg& a, LoadLibMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadLibMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadLibMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadLibMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoadLibMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadLibMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoadLibMsg& from) {
    LoadLibMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoadLibMsg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.LoadLibMsg";
  }
  protected:
  explicit LoadLibMsg(::google::protobuf::Arena* arena);
  LoadLibMsg(::google::protobuf::Arena* arena, const LoadLibMsg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddr2SymFieldNumber = 3,
    kLibraryNameFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .x64.Addr2Sym addr2sym = 3;
  int addr2sym_size() const;
  private:
  int _internal_addr2sym_size() const;

  public:
  void clear_addr2sym() ;
  ::x64::Addr2Sym* mutable_addr2sym(int index);
  ::google::protobuf::RepeatedPtrField< ::x64::Addr2Sym >*
      mutable_addr2sym();
  private:
  const ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>& _internal_addr2sym() const;
  ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>* _internal_mutable_addr2sym();
  public:
  const ::x64::Addr2Sym& addr2sym(int index) const;
  ::x64::Addr2Sym* add_addr2sym();
  const ::google::protobuf::RepeatedPtrField< ::x64::Addr2Sym >&
      addr2sym() const;
  // string library_name = 2;
  void clear_library_name() ;
  const std::string& library_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_library_name(Arg_&& arg, Args_... args);
  std::string* mutable_library_name();
  PROTOBUF_NODISCARD std::string* release_library_name();
  void set_allocated_library_name(std::string* value);

  private:
  const std::string& _internal_library_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_library_name(
      const std::string& value);
  std::string* _internal_mutable_library_name();

  public:
  // .x64.RPCHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::x64::RPCHeader& header() const;
  PROTOBUF_NODISCARD ::x64::RPCHeader* release_header();
  ::x64::RPCHeader* mutable_header();
  void set_allocated_header(::x64::RPCHeader* value);
  void unsafe_arena_set_allocated_header(::x64::RPCHeader* value);
  ::x64::RPCHeader* unsafe_arena_release_header();

  private:
  const ::x64::RPCHeader& _internal_header() const;
  ::x64::RPCHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:x64.LoadLibMsg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::x64::Addr2Sym > addr2sym_;
    ::google::protobuf::internal::ArenaStringPtr library_name_;
    ::x64::RPCHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class CPUState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.CPUState) */ {
 public:
  inline CPUState() : CPUState(nullptr) {}
  ~CPUState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CPUState(::google::protobuf::internal::ConstantInitialized);

  inline CPUState(const CPUState& from)
      : CPUState(nullptr, from) {}
  CPUState(CPUState&& from) noexcept
    : CPUState() {
    *this = ::std::move(from);
  }

  inline CPUState& operator=(const CPUState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPUState& operator=(CPUState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPUState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPUState* internal_default_instance() {
    return reinterpret_cast<const CPUState*>(
               &_CPUState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CPUState& a, CPUState& b) {
    a.Swap(&b);
  }
  inline void Swap(CPUState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPUState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPUState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPUState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPUState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CPUState& from) {
    CPUState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CPUState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.CPUState";
  }
  protected:
  explicit CPUState(::google::protobuf::Arena* arena);
  CPUState(::google::protobuf::Arena* arena, const CPUState& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGregsFieldNumber = 1,
    kFpregsFieldNumber = 2,
  };
  // repeated uint64 gregs = 1;
  int gregs_size() const;
  private:
  int _internal_gregs_size() const;

  public:
  void clear_gregs() ;
  ::uint64_t gregs(int index) const;
  void set_gregs(int index, ::uint64_t value);
  void add_gregs(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& gregs() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_gregs();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_gregs() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_gregs();

  public:
  // .x64.X64FPRegs fpregs = 2;
  bool has_fpregs() const;
  void clear_fpregs() ;
  const ::x64::X64FPRegs& fpregs() const;
  PROTOBUF_NODISCARD ::x64::X64FPRegs* release_fpregs();
  ::x64::X64FPRegs* mutable_fpregs();
  void set_allocated_fpregs(::x64::X64FPRegs* value);
  void unsafe_arena_set_allocated_fpregs(::x64::X64FPRegs* value);
  ::x64::X64FPRegs* unsafe_arena_release_fpregs();

  private:
  const ::x64::X64FPRegs& _internal_fpregs() const;
  ::x64::X64FPRegs* _internal_mutable_fpregs();

  public:
  // @@protoc_insertion_point(class_scope:x64.CPUState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> gregs_;
    mutable ::google::protobuf::internal::CachedSize _gregs_cached_byte_size_;
    ::x64::X64FPRegs* fpregs_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class UserContext final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.UserContext) */ {
 public:
  inline UserContext() : UserContext(nullptr) {}
  ~UserContext() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserContext(::google::protobuf::internal::ConstantInitialized);

  inline UserContext(const UserContext& from)
      : UserContext(nullptr, from) {}
  UserContext(UserContext&& from) noexcept
    : UserContext() {
    *this = ::std::move(from);
  }

  inline UserContext& operator=(const UserContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserContext& operator=(UserContext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserContext* internal_default_instance() {
    return reinterpret_cast<const UserContext*>(
               &_UserContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(UserContext& a, UserContext& b) {
    a.Swap(&b);
  }
  inline void Swap(UserContext* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserContext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserContext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserContext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserContext& from) {
    UserContext::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserContext* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.UserContext";
  }
  protected:
  explicit UserContext(::google::protobuf::Arena* arena);
  UserContext(::google::protobuf::Arena* arena, const UserContext& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCpuFieldNumber = 1,
    kStackBottomFieldNumber = 2,
  };
  // .x64.CPUState cpu = 1;
  bool has_cpu() const;
  void clear_cpu() ;
  const ::x64::CPUState& cpu() const;
  PROTOBUF_NODISCARD ::x64::CPUState* release_cpu();
  ::x64::CPUState* mutable_cpu();
  void set_allocated_cpu(::x64::CPUState* value);
  void unsafe_arena_set_allocated_cpu(::x64::CPUState* value);
  ::x64::CPUState* unsafe_arena_release_cpu();

  private:
  const ::x64::CPUState& _internal_cpu() const;
  ::x64::CPUState* _internal_mutable_cpu();

  public:
  // uint64 stack_bottom = 2;
  void clear_stack_bottom() ;
  ::uint64_t stack_bottom() const;
  void set_stack_bottom(::uint64_t value);

  private:
  ::uint64_t _internal_stack_bottom() const;
  void _internal_set_stack_bottom(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.UserContext)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::x64::CPUState* cpu_;
    ::uint64_t stack_bottom_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class InvokeFuncMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:x64.InvokeFuncMsg) */ {
 public:
  inline InvokeFuncMsg() : InvokeFuncMsg(nullptr) {}
  ~InvokeFuncMsg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeFuncMsg(::google::protobuf::internal::ConstantInitialized);

  inline InvokeFuncMsg(const InvokeFuncMsg& from)
      : InvokeFuncMsg(nullptr, from) {}
  InvokeFuncMsg(InvokeFuncMsg&& from) noexcept
    : InvokeFuncMsg() {
    *this = ::std::move(from);
  }

  inline InvokeFuncMsg& operator=(const InvokeFuncMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeFuncMsg& operator=(InvokeFuncMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeFuncMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeFuncMsg* internal_default_instance() {
    return reinterpret_cast<const InvokeFuncMsg*>(
               &_InvokeFuncMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(InvokeFuncMsg& a, InvokeFuncMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeFuncMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeFuncMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeFuncMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeFuncMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeFuncMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeFuncMsg& from) {
    InvokeFuncMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InvokeFuncMsg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "x64.InvokeFuncMsg";
  }
  protected:
  explicit InvokeFuncMsg(::google::protobuf::Arena* arena);
  InvokeFuncMsg(::google::protobuf::Arena* arena, const InvokeFuncMsg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 5,
    kHeaderFieldNumber = 1,
    kCtxFieldNumber = 4,
    kInvokefuncIdFieldNumber = 2,
    kRespIdFieldNumber = 3,
  };
  // repeated .x64.Page page = 5;
  int page_size() const;
  private:
  int _internal_page_size() const;

  public:
  void clear_page() ;
  ::x64::Page* mutable_page(int index);
  ::google::protobuf::RepeatedPtrField< ::x64::Page >*
      mutable_page();
  private:
  const ::google::protobuf::RepeatedPtrField<::x64::Page>& _internal_page() const;
  ::google::protobuf::RepeatedPtrField<::x64::Page>* _internal_mutable_page();
  public:
  const ::x64::Page& page(int index) const;
  ::x64::Page* add_page();
  const ::google::protobuf::RepeatedPtrField< ::x64::Page >&
      page() const;
  // .x64.RPCHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::x64::RPCHeader& header() const;
  PROTOBUF_NODISCARD ::x64::RPCHeader* release_header();
  ::x64::RPCHeader* mutable_header();
  void set_allocated_header(::x64::RPCHeader* value);
  void unsafe_arena_set_allocated_header(::x64::RPCHeader* value);
  ::x64::RPCHeader* unsafe_arena_release_header();

  private:
  const ::x64::RPCHeader& _internal_header() const;
  ::x64::RPCHeader* _internal_mutable_header();

  public:
  // .x64.UserContext ctx = 4;
  bool has_ctx() const;
  void clear_ctx() ;
  const ::x64::UserContext& ctx() const;
  PROTOBUF_NODISCARD ::x64::UserContext* release_ctx();
  ::x64::UserContext* mutable_ctx();
  void set_allocated_ctx(::x64::UserContext* value);
  void unsafe_arena_set_allocated_ctx(::x64::UserContext* value);
  ::x64::UserContext* unsafe_arena_release_ctx();

  private:
  const ::x64::UserContext& _internal_ctx() const;
  ::x64::UserContext* _internal_mutable_ctx();

  public:
  // uint64 invokefunc_id = 2;
  void clear_invokefunc_id() ;
  ::uint64_t invokefunc_id() const;
  void set_invokefunc_id(::uint64_t value);

  private:
  ::uint64_t _internal_invokefunc_id() const;
  void _internal_set_invokefunc_id(::uint64_t value);

  public:
  // uint64 resp_id = 3;
  void clear_resp_id() ;
  ::uint64_t resp_id() const;
  void set_resp_id(::uint64_t value);

  private:
  ::uint64_t _internal_resp_id() const;
  void _internal_set_resp_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:x64.InvokeFuncMsg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::x64::Page > page_;
    ::x64::RPCHeader* header_;
    ::x64::UserContext* ctx_;
    ::uint64_t invokefunc_id_;
    ::uint64_t resp_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// X64FPXReg

// repeated uint32 significand = 1;
inline int X64FPXReg::_internal_significand_size() const {
  return _internal_significand().size();
}
inline int X64FPXReg::significand_size() const {
  return _internal_significand_size();
}
inline void X64FPXReg::clear_significand() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.significand_.Clear();
}
inline ::uint32_t X64FPXReg::significand(int index) const {
  // @@protoc_insertion_point(field_get:x64.X64FPXReg.significand)
  return _internal_significand().Get(index);
}
inline void X64FPXReg::set_significand(int index, ::uint32_t value) {
  _internal_mutable_significand()->Set(index, value);
  // @@protoc_insertion_point(field_set:x64.X64FPXReg.significand)
}
inline void X64FPXReg::add_significand(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_significand()->Add(value);
  // @@protoc_insertion_point(field_add:x64.X64FPXReg.significand)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPXReg::significand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64FPXReg.significand)
  return _internal_significand();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPXReg::mutable_significand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64FPXReg.significand)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_significand();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPXReg::_internal_significand()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.significand_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPXReg::_internal_mutable_significand() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.significand_;
}

// uint32 exponent = 2;
inline void X64FPXReg::clear_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.exponent_ = 0u;
}
inline ::uint32_t X64FPXReg::exponent() const {
  // @@protoc_insertion_point(field_get:x64.X64FPXReg.exponent)
  return _internal_exponent();
}
inline void X64FPXReg::set_exponent(::uint32_t value) {
  _internal_set_exponent(value);
  // @@protoc_insertion_point(field_set:x64.X64FPXReg.exponent)
}
inline ::uint32_t X64FPXReg::_internal_exponent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exponent_;
}
inline void X64FPXReg::_internal_set_exponent(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exponent_ = value;
}

// repeated uint32 reserved = 3;
inline int X64FPXReg::_internal_reserved_size() const {
  return _internal_reserved().size();
}
inline int X64FPXReg::reserved_size() const {
  return _internal_reserved_size();
}
inline void X64FPXReg::clear_reserved() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reserved_.Clear();
}
inline ::uint32_t X64FPXReg::reserved(int index) const {
  // @@protoc_insertion_point(field_get:x64.X64FPXReg.reserved)
  return _internal_reserved().Get(index);
}
inline void X64FPXReg::set_reserved(int index, ::uint32_t value) {
  _internal_mutable_reserved()->Set(index, value);
  // @@protoc_insertion_point(field_set:x64.X64FPXReg.reserved)
}
inline void X64FPXReg::add_reserved(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_reserved()->Add(value);
  // @@protoc_insertion_point(field_add:x64.X64FPXReg.reserved)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPXReg::reserved() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64FPXReg.reserved)
  return _internal_reserved();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPXReg::mutable_reserved()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64FPXReg.reserved)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_reserved();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPXReg::_internal_reserved()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reserved_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPXReg::_internal_mutable_reserved() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.reserved_;
}

// -------------------------------------------------------------------

// X64XMMReg

// repeated uint32 element = 1;
inline int X64XMMReg::_internal_element_size() const {
  return _internal_element().size();
}
inline int X64XMMReg::element_size() const {
  return _internal_element_size();
}
inline void X64XMMReg::clear_element() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.element_.Clear();
}
inline ::uint32_t X64XMMReg::element(int index) const {
  // @@protoc_insertion_point(field_get:x64.X64XMMReg.element)
  return _internal_element().Get(index);
}
inline void X64XMMReg::set_element(int index, ::uint32_t value) {
  _internal_mutable_element()->Set(index, value);
  // @@protoc_insertion_point(field_set:x64.X64XMMReg.element)
}
inline void X64XMMReg::add_element(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_element()->Add(value);
  // @@protoc_insertion_point(field_add:x64.X64XMMReg.element)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64XMMReg::element() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64XMMReg.element)
  return _internal_element();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64XMMReg::mutable_element()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64XMMReg.element)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_element();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64XMMReg::_internal_element()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.element_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64XMMReg::_internal_mutable_element() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.element_;
}

// -------------------------------------------------------------------

// X64FPRegs

// uint32 cwd = 1;
inline void X64FPRegs::clear_cwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cwd_ = 0u;
}
inline ::uint32_t X64FPRegs::cwd() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.cwd)
  return _internal_cwd();
}
inline void X64FPRegs::set_cwd(::uint32_t value) {
  _internal_set_cwd(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.cwd)
}
inline ::uint32_t X64FPRegs::_internal_cwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cwd_;
}
inline void X64FPRegs::_internal_set_cwd(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cwd_ = value;
}

// uint32 swd = 2;
inline void X64FPRegs::clear_swd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.swd_ = 0u;
}
inline ::uint32_t X64FPRegs::swd() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.swd)
  return _internal_swd();
}
inline void X64FPRegs::set_swd(::uint32_t value) {
  _internal_set_swd(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.swd)
}
inline ::uint32_t X64FPRegs::_internal_swd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.swd_;
}
inline void X64FPRegs::_internal_set_swd(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.swd_ = value;
}

// uint32 ftw = 3;
inline void X64FPRegs::clear_ftw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ftw_ = 0u;
}
inline ::uint32_t X64FPRegs::ftw() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.ftw)
  return _internal_ftw();
}
inline void X64FPRegs::set_ftw(::uint32_t value) {
  _internal_set_ftw(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.ftw)
}
inline ::uint32_t X64FPRegs::_internal_ftw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ftw_;
}
inline void X64FPRegs::_internal_set_ftw(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ftw_ = value;
}

// uint32 fop = 4;
inline void X64FPRegs::clear_fop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fop_ = 0u;
}
inline ::uint32_t X64FPRegs::fop() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.fop)
  return _internal_fop();
}
inline void X64FPRegs::set_fop(::uint32_t value) {
  _internal_set_fop(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.fop)
}
inline ::uint32_t X64FPRegs::_internal_fop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fop_;
}
inline void X64FPRegs::_internal_set_fop(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fop_ = value;
}

// uint64 rip = 5;
inline void X64FPRegs::clear_rip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rip_ = ::uint64_t{0u};
}
inline ::uint64_t X64FPRegs::rip() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.rip)
  return _internal_rip();
}
inline void X64FPRegs::set_rip(::uint64_t value) {
  _internal_set_rip(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.rip)
}
inline ::uint64_t X64FPRegs::_internal_rip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rip_;
}
inline void X64FPRegs::_internal_set_rip(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rip_ = value;
}

// uint64 rdp = 6;
inline void X64FPRegs::clear_rdp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rdp_ = ::uint64_t{0u};
}
inline ::uint64_t X64FPRegs::rdp() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.rdp)
  return _internal_rdp();
}
inline void X64FPRegs::set_rdp(::uint64_t value) {
  _internal_set_rdp(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.rdp)
}
inline ::uint64_t X64FPRegs::_internal_rdp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rdp_;
}
inline void X64FPRegs::_internal_set_rdp(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rdp_ = value;
}

// uint32 mxcsr = 7;
inline void X64FPRegs::clear_mxcsr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mxcsr_ = 0u;
}
inline ::uint32_t X64FPRegs::mxcsr() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.mxcsr)
  return _internal_mxcsr();
}
inline void X64FPRegs::set_mxcsr(::uint32_t value) {
  _internal_set_mxcsr(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.mxcsr)
}
inline ::uint32_t X64FPRegs::_internal_mxcsr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mxcsr_;
}
inline void X64FPRegs::_internal_set_mxcsr(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mxcsr_ = value;
}

// uint32 mxcr_mask = 8;
inline void X64FPRegs::clear_mxcr_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mxcr_mask_ = 0u;
}
inline ::uint32_t X64FPRegs::mxcr_mask() const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.mxcr_mask)
  return _internal_mxcr_mask();
}
inline void X64FPRegs::set_mxcr_mask(::uint32_t value) {
  _internal_set_mxcr_mask(value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.mxcr_mask)
}
inline ::uint32_t X64FPRegs::_internal_mxcr_mask() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mxcr_mask_;
}
inline void X64FPRegs::_internal_set_mxcr_mask(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mxcr_mask_ = value;
}

// repeated .x64.X64FPXReg st = 9;
inline int X64FPRegs::_internal_st_size() const {
  return _internal_st().size();
}
inline int X64FPRegs::st_size() const {
  return _internal_st_size();
}
inline void X64FPRegs::clear_st() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.st_.Clear();
}
inline ::x64::X64FPXReg* X64FPRegs::mutable_st(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:x64.X64FPRegs.st)
  return _internal_mutable_st()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>* X64FPRegs::mutable_st()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64FPRegs.st)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_st();
}
inline const ::x64::X64FPXReg& X64FPRegs::st(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.st)
  return _internal_st().Get(index);
}
inline ::x64::X64FPXReg* X64FPRegs::add_st() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::x64::X64FPXReg* _add = _internal_mutable_st()->Add();
  // @@protoc_insertion_point(field_add:x64.X64FPRegs.st)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>& X64FPRegs::st() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64FPRegs.st)
  return _internal_st();
}
inline const ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>&
X64FPRegs::_internal_st() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.st_;
}
inline ::google::protobuf::RepeatedPtrField<::x64::X64FPXReg>*
X64FPRegs::_internal_mutable_st() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.st_;
}

// repeated .x64.X64XMMReg xmm = 10;
inline int X64FPRegs::_internal_xmm_size() const {
  return _internal_xmm().size();
}
inline int X64FPRegs::xmm_size() const {
  return _internal_xmm_size();
}
inline void X64FPRegs::clear_xmm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.xmm_.Clear();
}
inline ::x64::X64XMMReg* X64FPRegs::mutable_xmm(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:x64.X64FPRegs.xmm)
  return _internal_mutable_xmm()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>* X64FPRegs::mutable_xmm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64FPRegs.xmm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_xmm();
}
inline const ::x64::X64XMMReg& X64FPRegs::xmm(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.xmm)
  return _internal_xmm().Get(index);
}
inline ::x64::X64XMMReg* X64FPRegs::add_xmm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::x64::X64XMMReg* _add = _internal_mutable_xmm()->Add();
  // @@protoc_insertion_point(field_add:x64.X64FPRegs.xmm)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>& X64FPRegs::xmm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64FPRegs.xmm)
  return _internal_xmm();
}
inline const ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>&
X64FPRegs::_internal_xmm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmm_;
}
inline ::google::protobuf::RepeatedPtrField<::x64::X64XMMReg>*
X64FPRegs::_internal_mutable_xmm() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.xmm_;
}

// repeated uint32 reserved = 11;
inline int X64FPRegs::_internal_reserved_size() const {
  return _internal_reserved().size();
}
inline int X64FPRegs::reserved_size() const {
  return _internal_reserved_size();
}
inline void X64FPRegs::clear_reserved() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reserved_.Clear();
}
inline ::uint32_t X64FPRegs::reserved(int index) const {
  // @@protoc_insertion_point(field_get:x64.X64FPRegs.reserved)
  return _internal_reserved().Get(index);
}
inline void X64FPRegs::set_reserved(int index, ::uint32_t value) {
  _internal_mutable_reserved()->Set(index, value);
  // @@protoc_insertion_point(field_set:x64.X64FPRegs.reserved)
}
inline void X64FPRegs::add_reserved(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_reserved()->Add(value);
  // @@protoc_insertion_point(field_add:x64.X64FPRegs.reserved)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPRegs::reserved() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.X64FPRegs.reserved)
  return _internal_reserved();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPRegs::mutable_reserved()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.X64FPRegs.reserved)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_reserved();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& X64FPRegs::_internal_reserved()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reserved_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* X64FPRegs::_internal_mutable_reserved() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.reserved_;
}

// -------------------------------------------------------------------

// CPUState

// repeated uint64 gregs = 1;
inline int CPUState::_internal_gregs_size() const {
  return _internal_gregs().size();
}
inline int CPUState::gregs_size() const {
  return _internal_gregs_size();
}
inline void CPUState::clear_gregs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gregs_.Clear();
}
inline ::uint64_t CPUState::gregs(int index) const {
  // @@protoc_insertion_point(field_get:x64.CPUState.gregs)
  return _internal_gregs().Get(index);
}
inline void CPUState::set_gregs(int index, ::uint64_t value) {
  _internal_mutable_gregs()->Set(index, value);
  // @@protoc_insertion_point(field_set:x64.CPUState.gregs)
}
inline void CPUState::add_gregs(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gregs()->Add(value);
  // @@protoc_insertion_point(field_add:x64.CPUState.gregs)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CPUState::gregs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.CPUState.gregs)
  return _internal_gregs();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CPUState::mutable_gregs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.CPUState.gregs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gregs();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CPUState::_internal_gregs()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gregs_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CPUState::_internal_mutable_gregs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gregs_;
}

// .x64.X64FPRegs fpregs = 2;
inline bool CPUState::has_fpregs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fpregs_ != nullptr);
  return value;
}
inline void CPUState::clear_fpregs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.fpregs_ != nullptr) _impl_.fpregs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::x64::X64FPRegs& CPUState::_internal_fpregs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::X64FPRegs* p = _impl_.fpregs_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::X64FPRegs&>(::x64::_X64FPRegs_default_instance_);
}
inline const ::x64::X64FPRegs& CPUState::fpregs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.CPUState.fpregs)
  return _internal_fpregs();
}
inline void CPUState::unsafe_arena_set_allocated_fpregs(::x64::X64FPRegs* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fpregs_);
  }
  _impl_.fpregs_ = reinterpret_cast<::x64::X64FPRegs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.CPUState.fpregs)
}
inline ::x64::X64FPRegs* CPUState::release_fpregs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::X64FPRegs* released = _impl_.fpregs_;
  _impl_.fpregs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::X64FPRegs* CPUState::unsafe_arena_release_fpregs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.CPUState.fpregs)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::X64FPRegs* temp = _impl_.fpregs_;
  _impl_.fpregs_ = nullptr;
  return temp;
}
inline ::x64::X64FPRegs* CPUState::_internal_mutable_fpregs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.fpregs_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::X64FPRegs>(GetArena());
    _impl_.fpregs_ = reinterpret_cast<::x64::X64FPRegs*>(p);
  }
  return _impl_.fpregs_;
}
inline ::x64::X64FPRegs* CPUState::mutable_fpregs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::X64FPRegs* _msg = _internal_mutable_fpregs();
  // @@protoc_insertion_point(field_mutable:x64.CPUState.fpregs)
  return _msg;
}
inline void CPUState::set_allocated_fpregs(::x64::X64FPRegs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::X64FPRegs*>(_impl_.fpregs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::X64FPRegs*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.fpregs_ = reinterpret_cast<::x64::X64FPRegs*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.CPUState.fpregs)
}

// -------------------------------------------------------------------

// RPCHeader

// uint32 msg_type = 1;
inline void RPCHeader::clear_msg_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_type_ = 0u;
}
inline ::uint32_t RPCHeader::msg_type() const {
  // @@protoc_insertion_point(field_get:x64.RPCHeader.msg_type)
  return _internal_msg_type();
}
inline void RPCHeader::set_msg_type(::uint32_t value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:x64.RPCHeader.msg_type)
}
inline ::uint32_t RPCHeader::_internal_msg_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_type_;
}
inline void RPCHeader::_internal_set_msg_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_type_ = value;
}

// uint32 status = 2;
inline void RPCHeader::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0u;
}
inline ::uint32_t RPCHeader::status() const {
  // @@protoc_insertion_point(field_get:x64.RPCHeader.status)
  return _internal_status();
}
inline void RPCHeader::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:x64.RPCHeader.status)
}
inline ::uint32_t RPCHeader::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void RPCHeader::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// string client_id = 3;
inline void RPCHeader::clear_client_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& RPCHeader::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.RPCHeader.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCHeader::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:x64.RPCHeader.client_id)
}
inline std::string* RPCHeader::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:x64.RPCHeader.client_id)
  return _s;
}
inline const std::string& RPCHeader::_internal_client_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.client_id_.Get();
}
inline void RPCHeader::_internal_set_client_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* RPCHeader::_internal_mutable_client_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* RPCHeader::release_client_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.RPCHeader.client_id)
  return _impl_.client_id_.Release();
}
inline void RPCHeader::set_allocated_client_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.client_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:x64.RPCHeader.client_id)
}

// uint64 payload_size = 4;
inline void RPCHeader::clear_payload_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_size_ = ::uint64_t{0u};
}
inline ::uint64_t RPCHeader::payload_size() const {
  // @@protoc_insertion_point(field_get:x64.RPCHeader.payload_size)
  return _internal_payload_size();
}
inline void RPCHeader::set_payload_size(::uint64_t value) {
  _internal_set_payload_size(value);
  // @@protoc_insertion_point(field_set:x64.RPCHeader.payload_size)
}
inline ::uint64_t RPCHeader::_internal_payload_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_size_;
}
inline void RPCHeader::_internal_set_payload_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_size_ = value;
}

// -------------------------------------------------------------------

// Addr2Sym

// uint64 address = 1;
inline void Addr2Sym::clear_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_ = ::uint64_t{0u};
}
inline ::uint64_t Addr2Sym::address() const {
  // @@protoc_insertion_point(field_get:x64.Addr2Sym.address)
  return _internal_address();
}
inline void Addr2Sym::set_address(::uint64_t value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:x64.Addr2Sym.address)
}
inline ::uint64_t Addr2Sym::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_;
}
inline void Addr2Sym::_internal_set_address(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_ = value;
}

// string name = 2;
inline void Addr2Sym::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Addr2Sym::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.Addr2Sym.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Addr2Sym::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:x64.Addr2Sym.name)
}
inline std::string* Addr2Sym::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:x64.Addr2Sym.name)
  return _s;
}
inline const std::string& Addr2Sym::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Addr2Sym::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Addr2Sym::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Addr2Sym::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.Addr2Sym.name)
  return _impl_.name_.Release();
}
inline void Addr2Sym::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:x64.Addr2Sym.name)
}

// -------------------------------------------------------------------

// Page

// uint64 address = 1;
inline void Page::clear_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_ = ::uint64_t{0u};
}
inline ::uint64_t Page::address() const {
  // @@protoc_insertion_point(field_get:x64.Page.address)
  return _internal_address();
}
inline void Page::set_address(::uint64_t value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:x64.Page.address)
}
inline ::uint64_t Page::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_;
}
inline void Page::_internal_set_address(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_ = value;
}

// uint64 runtime_revision = 2;
inline void Page::clear_runtime_revision() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_revision_ = ::uint64_t{0u};
}
inline ::uint64_t Page::runtime_revision() const {
  // @@protoc_insertion_point(field_get:x64.Page.runtime_revision)
  return _internal_runtime_revision();
}
inline void Page::set_runtime_revision(::uint64_t value) {
  _internal_set_runtime_revision(value);
  // @@protoc_insertion_point(field_set:x64.Page.runtime_revision)
}
inline ::uint64_t Page::_internal_runtime_revision() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runtime_revision_;
}
inline void Page::_internal_set_runtime_revision(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_revision_ = value;
}

// uint64 client_revision = 3;
inline void Page::clear_client_revision() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.client_revision_ = ::uint64_t{0u};
}
inline ::uint64_t Page::client_revision() const {
  // @@protoc_insertion_point(field_get:x64.Page.client_revision)
  return _internal_client_revision();
}
inline void Page::set_client_revision(::uint64_t value) {
  _internal_set_client_revision(value);
  // @@protoc_insertion_point(field_set:x64.Page.client_revision)
}
inline ::uint64_t Page::_internal_client_revision() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.client_revision_;
}
inline void Page::_internal_set_client_revision(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.client_revision_ = value;
}

// uint32 content_size = 4;
inline void Page::clear_content_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_size_ = 0u;
}
inline ::uint32_t Page::content_size() const {
  // @@protoc_insertion_point(field_get:x64.Page.content_size)
  return _internal_content_size();
}
inline void Page::set_content_size(::uint32_t value) {
  _internal_set_content_size(value);
  // @@protoc_insertion_point(field_set:x64.Page.content_size)
}
inline ::uint32_t Page::_internal_content_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_size_;
}
inline void Page::_internal_set_content_size(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_size_ = value;
}

// bytes content = 5;
inline void Page::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& Page::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.Page.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Page::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:x64.Page.content)
}
inline std::string* Page::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:x64.Page.content)
  return _s;
}
inline const std::string& Page::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void Page::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArena());
}
inline std::string* Page::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* Page::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.Page.content)
  return _impl_.content_.Release();
}
inline void Page::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:x64.Page.content)
}

// -------------------------------------------------------------------

// LoadLibMsg

// .x64.RPCHeader header = 1;
inline bool LoadLibMsg::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LoadLibMsg::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::x64::RPCHeader& LoadLibMsg::_internal_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::RPCHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::RPCHeader&>(::x64::_RPCHeader_default_instance_);
}
inline const ::x64::RPCHeader& LoadLibMsg::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.LoadLibMsg.header)
  return _internal_header();
}
inline void LoadLibMsg::unsafe_arena_set_allocated_header(::x64::RPCHeader* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.LoadLibMsg.header)
}
inline ::x64::RPCHeader* LoadLibMsg::release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::RPCHeader* LoadLibMsg::unsafe_arena_release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.LoadLibMsg.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::x64::RPCHeader* LoadLibMsg::_internal_mutable_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::RPCHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(p);
  }
  return _impl_.header_;
}
inline ::x64::RPCHeader* LoadLibMsg::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::RPCHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:x64.LoadLibMsg.header)
  return _msg;
}
inline void LoadLibMsg::set_allocated_header(::x64::RPCHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::RPCHeader*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::RPCHeader*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.LoadLibMsg.header)
}

// string library_name = 2;
inline void LoadLibMsg::clear_library_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.library_name_.ClearToEmpty();
}
inline const std::string& LoadLibMsg::library_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.LoadLibMsg.library_name)
  return _internal_library_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoadLibMsg::set_library_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.library_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:x64.LoadLibMsg.library_name)
}
inline std::string* LoadLibMsg::mutable_library_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_library_name();
  // @@protoc_insertion_point(field_mutable:x64.LoadLibMsg.library_name)
  return _s;
}
inline const std::string& LoadLibMsg::_internal_library_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.library_name_.Get();
}
inline void LoadLibMsg::_internal_set_library_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.library_name_.Set(value, GetArena());
}
inline std::string* LoadLibMsg::_internal_mutable_library_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.library_name_.Mutable( GetArena());
}
inline std::string* LoadLibMsg::release_library_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.LoadLibMsg.library_name)
  return _impl_.library_name_.Release();
}
inline void LoadLibMsg::set_allocated_library_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.library_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.library_name_.IsDefault()) {
          _impl_.library_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:x64.LoadLibMsg.library_name)
}

// repeated .x64.Addr2Sym addr2sym = 3;
inline int LoadLibMsg::_internal_addr2sym_size() const {
  return _internal_addr2sym().size();
}
inline int LoadLibMsg::addr2sym_size() const {
  return _internal_addr2sym_size();
}
inline void LoadLibMsg::clear_addr2sym() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addr2sym_.Clear();
}
inline ::x64::Addr2Sym* LoadLibMsg::mutable_addr2sym(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:x64.LoadLibMsg.addr2sym)
  return _internal_mutable_addr2sym()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>* LoadLibMsg::mutable_addr2sym()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.LoadLibMsg.addr2sym)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_addr2sym();
}
inline const ::x64::Addr2Sym& LoadLibMsg::addr2sym(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.LoadLibMsg.addr2sym)
  return _internal_addr2sym().Get(index);
}
inline ::x64::Addr2Sym* LoadLibMsg::add_addr2sym() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::x64::Addr2Sym* _add = _internal_mutable_addr2sym()->Add();
  // @@protoc_insertion_point(field_add:x64.LoadLibMsg.addr2sym)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>& LoadLibMsg::addr2sym() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.LoadLibMsg.addr2sym)
  return _internal_addr2sym();
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>&
LoadLibMsg::_internal_addr2sym() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr2sym_;
}
inline ::google::protobuf::RepeatedPtrField<::x64::Addr2Sym>*
LoadLibMsg::_internal_mutable_addr2sym() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.addr2sym_;
}

// -------------------------------------------------------------------

// UserContext

// .x64.CPUState cpu = 1;
inline bool UserContext::has_cpu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cpu_ != nullptr);
  return value;
}
inline void UserContext::clear_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.cpu_ != nullptr) _impl_.cpu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::x64::CPUState& UserContext::_internal_cpu() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::CPUState* p = _impl_.cpu_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::CPUState&>(::x64::_CPUState_default_instance_);
}
inline const ::x64::CPUState& UserContext::cpu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.UserContext.cpu)
  return _internal_cpu();
}
inline void UserContext::unsafe_arena_set_allocated_cpu(::x64::CPUState* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cpu_);
  }
  _impl_.cpu_ = reinterpret_cast<::x64::CPUState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.UserContext.cpu)
}
inline ::x64::CPUState* UserContext::release_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::CPUState* released = _impl_.cpu_;
  _impl_.cpu_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::CPUState* UserContext::unsafe_arena_release_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.UserContext.cpu)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::CPUState* temp = _impl_.cpu_;
  _impl_.cpu_ = nullptr;
  return temp;
}
inline ::x64::CPUState* UserContext::_internal_mutable_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.cpu_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::CPUState>(GetArena());
    _impl_.cpu_ = reinterpret_cast<::x64::CPUState*>(p);
  }
  return _impl_.cpu_;
}
inline ::x64::CPUState* UserContext::mutable_cpu() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::CPUState* _msg = _internal_mutable_cpu();
  // @@protoc_insertion_point(field_mutable:x64.UserContext.cpu)
  return _msg;
}
inline void UserContext::set_allocated_cpu(::x64::CPUState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::CPUState*>(_impl_.cpu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::CPUState*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cpu_ = reinterpret_cast<::x64::CPUState*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.UserContext.cpu)
}

// uint64 stack_bottom = 2;
inline void UserContext::clear_stack_bottom() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stack_bottom_ = ::uint64_t{0u};
}
inline ::uint64_t UserContext::stack_bottom() const {
  // @@protoc_insertion_point(field_get:x64.UserContext.stack_bottom)
  return _internal_stack_bottom();
}
inline void UserContext::set_stack_bottom(::uint64_t value) {
  _internal_set_stack_bottom(value);
  // @@protoc_insertion_point(field_set:x64.UserContext.stack_bottom)
}
inline ::uint64_t UserContext::_internal_stack_bottom() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stack_bottom_;
}
inline void UserContext::_internal_set_stack_bottom(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.stack_bottom_ = value;
}

// -------------------------------------------------------------------

// InvokeFuncMsg

// .x64.RPCHeader header = 1;
inline bool InvokeFuncMsg::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void InvokeFuncMsg::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::x64::RPCHeader& InvokeFuncMsg::_internal_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::RPCHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::RPCHeader&>(::x64::_RPCHeader_default_instance_);
}
inline const ::x64::RPCHeader& InvokeFuncMsg::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.InvokeFuncMsg.header)
  return _internal_header();
}
inline void InvokeFuncMsg::unsafe_arena_set_allocated_header(::x64::RPCHeader* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.InvokeFuncMsg.header)
}
inline ::x64::RPCHeader* InvokeFuncMsg::release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::RPCHeader* InvokeFuncMsg::unsafe_arena_release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.InvokeFuncMsg.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::x64::RPCHeader* InvokeFuncMsg::_internal_mutable_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::RPCHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(p);
  }
  return _impl_.header_;
}
inline ::x64::RPCHeader* InvokeFuncMsg::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::RPCHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:x64.InvokeFuncMsg.header)
  return _msg;
}
inline void InvokeFuncMsg::set_allocated_header(::x64::RPCHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::RPCHeader*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::RPCHeader*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.InvokeFuncMsg.header)
}

// uint64 invokefunc_id = 2;
inline void InvokeFuncMsg::clear_invokefunc_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.invokefunc_id_ = ::uint64_t{0u};
}
inline ::uint64_t InvokeFuncMsg::invokefunc_id() const {
  // @@protoc_insertion_point(field_get:x64.InvokeFuncMsg.invokefunc_id)
  return _internal_invokefunc_id();
}
inline void InvokeFuncMsg::set_invokefunc_id(::uint64_t value) {
  _internal_set_invokefunc_id(value);
  // @@protoc_insertion_point(field_set:x64.InvokeFuncMsg.invokefunc_id)
}
inline ::uint64_t InvokeFuncMsg::_internal_invokefunc_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.invokefunc_id_;
}
inline void InvokeFuncMsg::_internal_set_invokefunc_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.invokefunc_id_ = value;
}

// uint64 resp_id = 3;
inline void InvokeFuncMsg::clear_resp_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resp_id_ = ::uint64_t{0u};
}
inline ::uint64_t InvokeFuncMsg::resp_id() const {
  // @@protoc_insertion_point(field_get:x64.InvokeFuncMsg.resp_id)
  return _internal_resp_id();
}
inline void InvokeFuncMsg::set_resp_id(::uint64_t value) {
  _internal_set_resp_id(value);
  // @@protoc_insertion_point(field_set:x64.InvokeFuncMsg.resp_id)
}
inline ::uint64_t InvokeFuncMsg::_internal_resp_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resp_id_;
}
inline void InvokeFuncMsg::_internal_set_resp_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resp_id_ = value;
}

// .x64.UserContext ctx = 4;
inline bool InvokeFuncMsg::has_ctx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ctx_ != nullptr);
  return value;
}
inline void InvokeFuncMsg::clear_ctx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ctx_ != nullptr) _impl_.ctx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::x64::UserContext& InvokeFuncMsg::_internal_ctx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::UserContext* p = _impl_.ctx_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::UserContext&>(::x64::_UserContext_default_instance_);
}
inline const ::x64::UserContext& InvokeFuncMsg::ctx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.InvokeFuncMsg.ctx)
  return _internal_ctx();
}
inline void InvokeFuncMsg::unsafe_arena_set_allocated_ctx(::x64::UserContext* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ctx_);
  }
  _impl_.ctx_ = reinterpret_cast<::x64::UserContext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.InvokeFuncMsg.ctx)
}
inline ::x64::UserContext* InvokeFuncMsg::release_ctx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::x64::UserContext* released = _impl_.ctx_;
  _impl_.ctx_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::UserContext* InvokeFuncMsg::unsafe_arena_release_ctx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.InvokeFuncMsg.ctx)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::x64::UserContext* temp = _impl_.ctx_;
  _impl_.ctx_ = nullptr;
  return temp;
}
inline ::x64::UserContext* InvokeFuncMsg::_internal_mutable_ctx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::UserContext>(GetArena());
    _impl_.ctx_ = reinterpret_cast<::x64::UserContext*>(p);
  }
  return _impl_.ctx_;
}
inline ::x64::UserContext* InvokeFuncMsg::mutable_ctx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::UserContext* _msg = _internal_mutable_ctx();
  // @@protoc_insertion_point(field_mutable:x64.InvokeFuncMsg.ctx)
  return _msg;
}
inline void InvokeFuncMsg::set_allocated_ctx(::x64::UserContext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::UserContext*>(_impl_.ctx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::UserContext*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ctx_ = reinterpret_cast<::x64::UserContext*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.InvokeFuncMsg.ctx)
}

// repeated .x64.Page page = 5;
inline int InvokeFuncMsg::_internal_page_size() const {
  return _internal_page().size();
}
inline int InvokeFuncMsg::page_size() const {
  return _internal_page_size();
}
inline void InvokeFuncMsg::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_.Clear();
}
inline ::x64::Page* InvokeFuncMsg::mutable_page(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:x64.InvokeFuncMsg.page)
  return _internal_mutable_page()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::x64::Page>* InvokeFuncMsg::mutable_page()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.InvokeFuncMsg.page)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_page();
}
inline const ::x64::Page& InvokeFuncMsg::page(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.InvokeFuncMsg.page)
  return _internal_page().Get(index);
}
inline ::x64::Page* InvokeFuncMsg::add_page() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::x64::Page* _add = _internal_mutable_page()->Add();
  // @@protoc_insertion_point(field_add:x64.InvokeFuncMsg.page)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Page>& InvokeFuncMsg::page() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.InvokeFuncMsg.page)
  return _internal_page();
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Page>&
InvokeFuncMsg::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline ::google::protobuf::RepeatedPtrField<::x64::Page>*
InvokeFuncMsg::_internal_mutable_page() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.page_;
}

// -------------------------------------------------------------------

// PullPageMsg

// .x64.RPCHeader header = 1;
inline bool PullPageMsg::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void PullPageMsg::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::x64::RPCHeader& PullPageMsg::_internal_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::x64::RPCHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::x64::RPCHeader&>(::x64::_RPCHeader_default_instance_);
}
inline const ::x64::RPCHeader& PullPageMsg::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.PullPageMsg.header)
  return _internal_header();
}
inline void PullPageMsg::unsafe_arena_set_allocated_header(::x64::RPCHeader* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:x64.PullPageMsg.header)
}
inline ::x64::RPCHeader* PullPageMsg::release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::x64::RPCHeader* PullPageMsg::unsafe_arena_release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:x64.PullPageMsg.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::x64::RPCHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::x64::RPCHeader* PullPageMsg::_internal_mutable_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::x64::RPCHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(p);
  }
  return _impl_.header_;
}
inline ::x64::RPCHeader* PullPageMsg::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::x64::RPCHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:x64.PullPageMsg.header)
  return _msg;
}
inline void PullPageMsg::set_allocated_header(::x64::RPCHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::x64::RPCHeader*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::x64::RPCHeader*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::x64::RPCHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:x64.PullPageMsg.header)
}

// repeated .x64.Page page = 2;
inline int PullPageMsg::_internal_page_size() const {
  return _internal_page().size();
}
inline int PullPageMsg::page_size() const {
  return _internal_page_size();
}
inline void PullPageMsg::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_.Clear();
}
inline ::x64::Page* PullPageMsg::mutable_page(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:x64.PullPageMsg.page)
  return _internal_mutable_page()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::x64::Page>* PullPageMsg::mutable_page()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:x64.PullPageMsg.page)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_page();
}
inline const ::x64::Page& PullPageMsg::page(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:x64.PullPageMsg.page)
  return _internal_page().Get(index);
}
inline ::x64::Page* PullPageMsg::add_page() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::x64::Page* _add = _internal_mutable_page()->Add();
  // @@protoc_insertion_point(field_add:x64.PullPageMsg.page)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Page>& PullPageMsg::page() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:x64.PullPageMsg.page)
  return _internal_page();
}
inline const ::google::protobuf::RepeatedPtrField<::x64::Page>&
PullPageMsg::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline ::google::protobuf::RepeatedPtrField<::x64::Page>*
PullPageMsg::_internal_mutable_page() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.page_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace x64


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
